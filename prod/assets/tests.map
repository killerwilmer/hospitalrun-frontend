{"version":3,"sources":["hospitalrun/tests/_base.stylelint-test.js","hospitalrun/tests/_bootstrap-theme.stylelint-test.js","hospitalrun/tests/_bootstrap.stylelint-test.js","hospitalrun/tests/_index.stylelint-test.js","hospitalrun/tests/_layout.stylelint-test.js","hospitalrun/tests/_loading_notice.stylelint-test.js","hospitalrun/tests/_sign_in_screen.stylelint-test.js","hospitalrun/tests/_temp_misc.stylelint-test.js","hospitalrun/tests/_typography.stylelint-test.js","hospitalrun/tests/_variables_mixins.stylelint-test.js","hospitalrun/tests/acceptance/admin-test.js","hospitalrun/tests/acceptance/admin-test.jscs-test.js","hospitalrun/tests/acceptance/appointments-test.js","hospitalrun/tests/acceptance/appointments-test.jscs-test.js","hospitalrun/tests/acceptance/imaging-test.js","hospitalrun/tests/acceptance/imaging-test.jscs-test.js","hospitalrun/tests/acceptance/inventory-test.js","hospitalrun/tests/acceptance/inventory-test.jscs-test.js","hospitalrun/tests/acceptance/invoices-test.js","hospitalrun/tests/acceptance/invoices-test.jscs-test.js","hospitalrun/tests/acceptance/labs-test.js","hospitalrun/tests/acceptance/labs-test.jscs-test.js","hospitalrun/tests/acceptance/login-test.js","hospitalrun/tests/acceptance/login-test.jscs-test.js","hospitalrun/tests/acceptance/medication-test.js","hospitalrun/tests/acceptance/medication-test.jscs-test.js","hospitalrun/tests/acceptance/patient-notes-test.js","hospitalrun/tests/acceptance/patient-notes-test.jscs-test.js","hospitalrun/tests/acceptance/patients-test.js","hospitalrun/tests/acceptance/patients-test.jscs-test.js","hospitalrun/tests/acceptance/pricing-test.js","hospitalrun/tests/acceptance/pricing-test.jscs-test.js","hospitalrun/tests/acceptance/role-test.js","hospitalrun/tests/acceptance/role-test.jscs-test.js","hospitalrun/tests/acceptance/users-test.js","hospitalrun/tests/acceptance/users-test.jscs-test.js","hospitalrun/tests/adapters/application.jscs-test.js","hospitalrun/tests/adapters/user.jscs-test.js","hospitalrun/tests/admin/address/controller.jscs-test.js","hospitalrun/tests/admin/address/route.jscs-test.js","hospitalrun/tests/admin/loaddb/controller.jscs-test.js","hospitalrun/tests/admin/loaddb/route.jscs-test.js","hospitalrun/tests/admin/lookup/controller.jscs-test.js","hospitalrun/tests/admin/lookup/edit/controller.jscs-test.js","hospitalrun/tests/admin/lookup/route.jscs-test.js","hospitalrun/tests/admin/query/controller.jscs-test.js","hospitalrun/tests/admin/query/route.jscs-test.js","hospitalrun/tests/admin/roles/controller.jscs-test.js","hospitalrun/tests/admin/roles/route.jscs-test.js","hospitalrun/tests/admin/route.jscs-test.js","hospitalrun/tests/app.jscs-test.js","hospitalrun/tests/app.stylelint-test.js","hospitalrun/tests/appointments/delete/controller.jscs-test.js","hospitalrun/tests/appointments/edit/controller.jscs-test.js","hospitalrun/tests/appointments/edit/route.jscs-test.js","hospitalrun/tests/appointments/index/controller.jscs-test.js","hospitalrun/tests/appointments/index/route.jscs-test.js","hospitalrun/tests/appointments/missed/controller.jscs-test.js","hospitalrun/tests/appointments/missed/route.jscs-test.js","hospitalrun/tests/appointments/route.jscs-test.js","hospitalrun/tests/appointments/search/controller.jscs-test.js","hospitalrun/tests/appointments/search/route.jscs-test.js","hospitalrun/tests/appointments/today/controller.jscs-test.js","hospitalrun/tests/appointments/today/route.jscs-test.js","hospitalrun/tests/authenticators/custom.jscs-test.js","hospitalrun/tests/components/_form_styles.stylelint-test.js","hospitalrun/tests/components/_imaging.stylelint-test.js","hospitalrun/tests/components/_labs.stylelint-test.js","hospitalrun/tests/components/_pagination.stylelint-test.js","hospitalrun/tests/components/_panel.stylelint-test.js","hospitalrun/tests/components/_patient_history.stylelint-test.js","hospitalrun/tests/components/_patient_summary.stylelint-test.js","hospitalrun/tests/components/_sidebar_nav.stylelint-test.js","hospitalrun/tests/components/_tab_content.stylelint-test.js","hospitalrun/tests/components/_tab_nav.stylelint-test.js","hospitalrun/tests/components/action-checkbox.jscs-test.js","hospitalrun/tests/components/array-display.jscs-test.js","hospitalrun/tests/components/charge-quantity.jscs-test.js","hospitalrun/tests/components/charges-by-type-tab.jscs-test.js","hospitalrun/tests/components/checkbox-or-typeahead.jscs-test.js","hospitalrun/tests/components/custom-form.jscs-test.js","hospitalrun/tests/components/date-input.jscs-test.js","hospitalrun/tests/components/date-picker.jscs-test.js","hospitalrun/tests/components/edit-panel.jscs-test.js","hospitalrun/tests/components/ext-radio.jscs-test.js","hospitalrun/tests/components/file-upload.jscs-test.js","hospitalrun/tests/components/icd10-pcs-typeahead.jscs-test.js","hospitalrun/tests/components/icd10-typeahead.jscs-test.js","hospitalrun/tests/components/image-upload.jscs-test.js","hospitalrun/tests/components/inventory-location-picker.jscs-test.js","hospitalrun/tests/components/inventory-typeahead.jscs-test.js","hospitalrun/tests/components/item-listing.jscs-test.js","hospitalrun/tests/components/loading-message.jscs-test.js","hospitalrun/tests/components/location-select.jscs-test.js","hospitalrun/tests/components/modal-dialog.jscs-test.js","hospitalrun/tests/components/nav-menu.jscs-test.js","hospitalrun/tests/components/nav-paging.jscs-test.js","hospitalrun/tests/components/patient-summary.jscs-test.js","hospitalrun/tests/components/patient-typeahead.jscs-test.js","hospitalrun/tests/components/photo-display.jscs-test.js","hospitalrun/tests/components/price-list.jscs-test.js","hospitalrun/tests/components/pricing-typeahead.jscs-test.js","hospitalrun/tests/components/print-this.jscs-test.js","hospitalrun/tests/components/quantity-calc.jscs-test.js","hospitalrun/tests/components/quantity-conv.jscs-test.js","hospitalrun/tests/components/role-select.jscs-test.js","hospitalrun/tests/components/search-listing.jscs-test.js","hospitalrun/tests/components/select-or-typeahead.jscs-test.js","hospitalrun/tests/components/smart-prescription.jscs-test.js","hospitalrun/tests/components/sortable-column.jscs-test.js","hospitalrun/tests/components/take-photo.jscs-test.js","hospitalrun/tests/components/text-search.jscs-test.js","hospitalrun/tests/components/type-ahead.jscs-test.js","hospitalrun/tests/controllers/abstract-delete-controller.jscs-test.js","hospitalrun/tests/controllers/abstract-edit-controller.jscs-test.js","hospitalrun/tests/controllers/abstract-paged-controller.jscs-test.js","hospitalrun/tests/controllers/abstract-report-controller.jscs-test.js","hospitalrun/tests/controllers/application.jscs-test.js","hospitalrun/tests/controllers/index.jscs-test.js","hospitalrun/tests/controllers/login.jscs-test.js","hospitalrun/tests/controllers/navigation.jscs-test.js","hospitalrun/tests/dialog/controller.jscs-test.js","hospitalrun/tests/finishgauth/route.jscs-test.js","hospitalrun/tests/helpers/authenticate-user.js","hospitalrun/tests/helpers/authenticate-user.jscs-test.js","hospitalrun/tests/helpers/date-format.jscs-test.js","hospitalrun/tests/helpers/destroy-app.js","hospitalrun/tests/helpers/destroy-app.jscs-test.js","hospitalrun/tests/helpers/ember-i18n/test-helpers.js","hospitalrun/tests/helpers/ember-simple-auth.js","hospitalrun/tests/helpers/html-line-break.jscs-test.js","hospitalrun/tests/helpers/is-equal-array.jscs-test.js","hospitalrun/tests/helpers/is-equal.jscs-test.js","hospitalrun/tests/helpers/is-not.jscs-test.js","hospitalrun/tests/helpers/module-for-acceptance.js","hospitalrun/tests/helpers/module-for-acceptance.jscs-test.js","hospitalrun/tests/helpers/number-format.jscs-test.js","hospitalrun/tests/helpers/read-path.jscs-test.js","hospitalrun/tests/helpers/resolver.js","hospitalrun/tests/helpers/resolver.jscs-test.js","hospitalrun/tests/helpers/run-with-pouch-dump.js","hospitalrun/tests/helpers/run-with-pouch-dump.jscs-test.js","hospitalrun/tests/helpers/select-date.js","hospitalrun/tests/helpers/select-date.jscs-test.js","hospitalrun/tests/helpers/select.js","hospitalrun/tests/helpers/select.jscs-test.js","hospitalrun/tests/helpers/start-app.js","hospitalrun/tests/helpers/start-app.jscs-test.js","hospitalrun/tests/helpers/validate-properties.js","hospitalrun/tests/helpers/wait-to-appear.js","hospitalrun/tests/helpers/wait-to-appear.jscs-test.js","hospitalrun/tests/imaging/charge/controller.jscs-test.js","hospitalrun/tests/imaging/completed/completed-list-item/component.jscs-test.js","hospitalrun/tests/imaging/completed/controller.jscs-test.js","hospitalrun/tests/imaging/completed/route.jscs-test.js","hospitalrun/tests/imaging/delete/controller.jscs-test.js","hospitalrun/tests/imaging/edit/controller.jscs-test.js","hospitalrun/tests/imaging/edit/route.jscs-test.js","hospitalrun/tests/imaging/index/controller.jscs-test.js","hospitalrun/tests/imaging/index/imaging-edit-button/component.jscs-test.js","hospitalrun/tests/imaging/index/requested-list-item/component.jscs-test.js","hospitalrun/tests/imaging/index/route.jscs-test.js","hospitalrun/tests/imaging/route.jscs-test.js","hospitalrun/tests/initializers/i18n.jscs-test.js","hospitalrun/tests/integration/components/inventory/rank-select-test.js","hospitalrun/tests/integration/components/inventory/rank-select-test.jscs-test.js","hospitalrun/tests/inventory/adjust/controller.jscs-test.js","hospitalrun/tests/inventory/barcode/controller.jscs-test.js","hospitalrun/tests/inventory/barcode/route.jscs-test.js","hospitalrun/tests/inventory/batch/controller.jscs-test.js","hospitalrun/tests/inventory/batch/route.jscs-test.js","hospitalrun/tests/inventory/delete/controller.jscs-test.js","hospitalrun/tests/inventory/edit/controller.jscs-test.js","hospitalrun/tests/inventory/edit/route.jscs-test.js","hospitalrun/tests/inventory/index/controller.jscs-test.js","hospitalrun/tests/inventory/index/route.jscs-test.js","hospitalrun/tests/inventory/listing/controller.jscs-test.js","hospitalrun/tests/inventory/listing/route.jscs-test.js","hospitalrun/tests/inventory/purchase/edit/controller.jscs-test.js","hospitalrun/tests/inventory/quick-add/controller.jscs-test.js","hospitalrun/tests/inventory/rank-select/component.jscs-test.js","hospitalrun/tests/inventory/reports/controller.jscs-test.js","hospitalrun/tests/inventory/reports/route.jscs-test.js","hospitalrun/tests/inventory/request/controller.jscs-test.js","hospitalrun/tests/inventory/request/route.jscs-test.js","hospitalrun/tests/inventory/route.jscs-test.js","hospitalrun/tests/inventory/search/controller.jscs-test.js","hospitalrun/tests/inventory/search/route.jscs-test.js","hospitalrun/tests/inventory/transfer/controller.jscs-test.js","hospitalrun/tests/invoices/add-line-item/controller.jscs-test.js","hospitalrun/tests/invoices/delete/controller.jscs-test.js","hospitalrun/tests/invoices/edit/controller.jscs-test.js","hospitalrun/tests/invoices/edit/route.jscs-test.js","hospitalrun/tests/invoices/index/controller.jscs-test.js","hospitalrun/tests/invoices/index/route.jscs-test.js","hospitalrun/tests/invoices/payment/controller.jscs-test.js","hospitalrun/tests/invoices/route.jscs-test.js","hospitalrun/tests/invoices/search/route.jscs-test.js","hospitalrun/tests/labs/charge/controller.jscs-test.js","hospitalrun/tests/labs/completed/controller.jscs-test.js","hospitalrun/tests/labs/completed/labs-completed-list-item/component.jscs-test.js","hospitalrun/tests/labs/completed/route.jscs-test.js","hospitalrun/tests/labs/delete/controller.jscs-test.js","hospitalrun/tests/labs/edit/controller.jscs-test.js","hospitalrun/tests/labs/edit/route.jscs-test.js","hospitalrun/tests/labs/index/controller.jscs-test.js","hospitalrun/tests/labs/index/labs-edit-button/component.jscs-test.js","hospitalrun/tests/labs/index/labs-list-item/component.jscs-test.js","hospitalrun/tests/labs/index/route.jscs-test.js","hospitalrun/tests/labs/route.jscs-test.js","hospitalrun/tests/locales/de/translations.jscs-test.js","hospitalrun/tests/locales/en/config.jscs-test.js","hospitalrun/tests/locales/en/translations.jscs-test.js","hospitalrun/tests/locales/es/translations.jscs-test.js","hospitalrun/tests/locales/es-CO/translations.jscs-test.js","hospitalrun/tests/locales/fr/translations.jscs-test.js","hospitalrun/tests/locales/pt-BR/translations.jscs-test.js","hospitalrun/tests/locales/ru/translations.jscs-test.js","hospitalrun/tests/locales/tr/translations.jscs-test.js","hospitalrun/tests/medication/completed/controller.jscs-test.js","hospitalrun/tests/medication/completed/route.jscs-test.js","hospitalrun/tests/medication/delete/controller.jscs-test.js","hospitalrun/tests/medication/edit/controller.jscs-test.js","hospitalrun/tests/medication/edit/route.jscs-test.js","hospitalrun/tests/medication/index/controller.jscs-test.js","hospitalrun/tests/medication/index/route.jscs-test.js","hospitalrun/tests/medication/return/controller.jscs-test.js","hospitalrun/tests/medication/return/route.jscs-test.js","hospitalrun/tests/medication/route.jscs-test.js","hospitalrun/tests/medication/search/route.jscs-test.js","hospitalrun/tests/mixins/appointment-statuses.jscs-test.js","hospitalrun/tests/mixins/billing-categories.jscs-test.js","hospitalrun/tests/mixins/blood-types.jscs-test.js","hospitalrun/tests/mixins/can-edit-requested.jscs-test.js","hospitalrun/tests/mixins/charge-actions.jscs-test.js","hospitalrun/tests/mixins/charge-route.jscs-test.js","hospitalrun/tests/mixins/date-format.jscs-test.js","hospitalrun/tests/mixins/dob-days.jscs-test.js","hospitalrun/tests/mixins/edit-panel-props.jscs-test.js","hospitalrun/tests/mixins/fulfill-request.jscs-test.js","hospitalrun/tests/mixins/hospitalrun-version.jscs-test.js","hospitalrun/tests/mixins/imaging-pricing-types.jscs-test.js","hospitalrun/tests/mixins/inventory-adjustment-types.jscs-test.js","hospitalrun/tests/mixins/inventory-id.jscs-test.js","hospitalrun/tests/mixins/inventory-locations.jscs-test.js","hospitalrun/tests/mixins/inventory-selection.jscs-test.js","hospitalrun/tests/mixins/inventory-type-list.jscs-test.js","hospitalrun/tests/mixins/is-update-disabled.jscs-test.js","hospitalrun/tests/mixins/lab-pricing-types.jscs-test.js","hospitalrun/tests/mixins/location-name.jscs-test.js","hospitalrun/tests/mixins/medication-details.jscs-test.js","hospitalrun/tests/mixins/modal-helper.jscs-test.js","hospitalrun/tests/mixins/navigation.jscs-test.js","hospitalrun/tests/mixins/number-format.jscs-test.js","hospitalrun/tests/mixins/pagination-props.jscs-test.js","hospitalrun/tests/mixins/paging-actions.jscs-test.js","hospitalrun/tests/mixins/patient-diagnosis.jscs-test.js","hospitalrun/tests/mixins/patient-id.jscs-test.js","hospitalrun/tests/mixins/patient-list-route.jscs-test.js","hospitalrun/tests/mixins/patient-name.jscs-test.js","hospitalrun/tests/mixins/patient-notes.jscs-test.js","hospitalrun/tests/mixins/patient-submodule.jscs-test.js","hospitalrun/tests/mixins/patient-visits.jscs-test.js","hospitalrun/tests/mixins/payment-profiles.jscs-test.js","hospitalrun/tests/mixins/pouch-adapter-utils.jscs-test.js","hospitalrun/tests/mixins/pouchdb.jscs-test.js","hospitalrun/tests/mixins/progress-dialog.jscs-test.js","hospitalrun/tests/mixins/publish-statuses.jscs-test.js","hospitalrun/tests/mixins/result-validation.jscs-test.js","hospitalrun/tests/mixins/return-to.jscs-test.js","hospitalrun/tests/mixins/setup-user-role.jscs-test.js","hospitalrun/tests/mixins/unit-types.jscs-test.js","hospitalrun/tests/mixins/user-roles.jscs-test.js","hospitalrun/tests/mixins/user-session.jscs-test.js","hospitalrun/tests/mixins/visit-types.jscs-test.js","hospitalrun/tests/models/abstract.jscs-test.js","hospitalrun/tests/models/add-diagnosis.jscs-test.js","hospitalrun/tests/models/appointment.jscs-test.js","hospitalrun/tests/models/billing-line-item.jscs-test.js","hospitalrun/tests/models/family-info.jscs-test.js","hospitalrun/tests/models/imaging.jscs-test.js","hospitalrun/tests/models/inv-location.jscs-test.js","hospitalrun/tests/models/inv-purchase.jscs-test.js","hospitalrun/tests/models/inv-request.jscs-test.js","hospitalrun/tests/models/inventory-batch.jscs-test.js","hospitalrun/tests/models/inventory.jscs-test.js","hospitalrun/tests/models/invoice.jscs-test.js","hospitalrun/tests/models/lab.jscs-test.js","hospitalrun/tests/models/line-item-detail.jscs-test.js","hospitalrun/tests/models/lookup.jscs-test.js","hospitalrun/tests/models/medication.jscs-test.js","hospitalrun/tests/models/option.jscs-test.js","hospitalrun/tests/models/override-price.jscs-test.js","hospitalrun/tests/models/patient-note.jscs-test.js","hospitalrun/tests/models/patient.jscs-test.js","hospitalrun/tests/models/payment.jscs-test.js","hospitalrun/tests/models/photo.jscs-test.js","hospitalrun/tests/models/price-profile.jscs-test.js","hospitalrun/tests/models/pricing.jscs-test.js","hospitalrun/tests/models/proc-charge.jscs-test.js","hospitalrun/tests/models/procedure.jscs-test.js","hospitalrun/tests/models/sequence.jscs-test.js","hospitalrun/tests/models/social-expense.jscs-test.js","hospitalrun/tests/models/user-role.jscs-test.js","hospitalrun/tests/models/user.jscs-test.js","hospitalrun/tests/models/visit.jscs-test.js","hospitalrun/tests/models/vital.jscs-test.js","hospitalrun/tests/patients/add-contact/controller.jscs-test.js","hospitalrun/tests/patients/admitted/controller.jscs-test.js","hospitalrun/tests/patients/admitted/route.jscs-test.js","hospitalrun/tests/patients/delete/controller.jscs-test.js","hospitalrun/tests/patients/edit/controller.jscs-test.js","hospitalrun/tests/patients/edit/route.jscs-test.js","hospitalrun/tests/patients/index/controller.jscs-test.js","hospitalrun/tests/patients/index/route.jscs-test.js","hospitalrun/tests/patients/notes/controller.jscs-test.js","hospitalrun/tests/patients/photo/controller.jscs-test.js","hospitalrun/tests/patients/quick-add/controller.jscs-test.js","hospitalrun/tests/patients/reports/controller.jscs-test.js","hospitalrun/tests/patients/reports/route.jscs-test.js","hospitalrun/tests/patients/route.jscs-test.js","hospitalrun/tests/patients/search/controller.jscs-test.js","hospitalrun/tests/patients/search/route.jscs-test.js","hospitalrun/tests/patients/socialwork/expense/controller.jscs-test.js","hospitalrun/tests/patients/socialwork/family-info/controller.jscs-test.js","hospitalrun/tests/pricing/delete/controller.jscs-test.js","hospitalrun/tests/pricing/edit/controller.jscs-test.js","hospitalrun/tests/pricing/edit/route.jscs-test.js","hospitalrun/tests/pricing/imaging/controller.jscs-test.js","hospitalrun/tests/pricing/imaging/route.jscs-test.js","hospitalrun/tests/pricing/index/controller.jscs-test.js","hospitalrun/tests/pricing/index/route.jscs-test.js","hospitalrun/tests/pricing/lab/controller.jscs-test.js","hospitalrun/tests/pricing/lab/route.jscs-test.js","hospitalrun/tests/pricing/override/controller.jscs-test.js","hospitalrun/tests/pricing/procedure/controller.jscs-test.js","hospitalrun/tests/pricing/procedure/route.jscs-test.js","hospitalrun/tests/pricing/profiles/controller.jscs-test.js","hospitalrun/tests/pricing/profiles/edit/controller.jscs-test.js","hospitalrun/tests/pricing/profiles/route.jscs-test.js","hospitalrun/tests/pricing/route.jscs-test.js","hospitalrun/tests/pricing/search/controller.jscs-test.js","hospitalrun/tests/pricing/search/route.jscs-test.js","hospitalrun/tests/pricing/ward/controller.jscs-test.js","hospitalrun/tests/pricing/ward/route.jscs-test.js","hospitalrun/tests/print/invoice/controller.jscs-test.js","hospitalrun/tests/procedures/charge/controller.jscs-test.js","hospitalrun/tests/procedures/edit/controller.jscs-test.js","hospitalrun/tests/procedures/edit/route.jscs-test.js","hospitalrun/tests/procedures/medication/controller.jscs-test.js","hospitalrun/tests/resolver.jscs-test.js","hospitalrun/tests/router.jscs-test.js","hospitalrun/tests/routes/abstract-edit-route.jscs-test.js","hospitalrun/tests/routes/abstract-index-route.jscs-test.js","hospitalrun/tests/routes/abstract-module-route.jscs-test.js","hospitalrun/tests/routes/abstract-search-route.jscs-test.js","hospitalrun/tests/routes/application.jscs-test.js","hospitalrun/tests/routes/index.jscs-test.js","hospitalrun/tests/routes/login.jscs-test.js","hospitalrun/tests/serializers/application.jscs-test.js","hospitalrun/tests/serializers/user.jscs-test.js","hospitalrun/tests/services/config.jscs-test.js","hospitalrun/tests/services/database.jscs-test.js","hospitalrun/tests/services/filesystem.jscs-test.js","hospitalrun/tests/serviceworkers/pouchdb-sync.jscs-test.js","hospitalrun/tests/template-deprecations-test.js","hospitalrun/tests/test-helper.js","hospitalrun/tests/test-helper.jscs-test.js","hospitalrun/tests/unit/appointments/missed/route-test.js","hospitalrun/tests/unit/appointments/missed/route-test.jscs-test.js","hospitalrun/tests/unit/components/nav-menu-test.js","hospitalrun/tests/unit/components/nav-menu-test.jscs-test.js","hospitalrun/tests/unit/models/inventory-test.js","hospitalrun/tests/unit/models/inventory-test.jscs-test.js","hospitalrun/tests/unit/services/config-test.js","hospitalrun/tests/unit/services/config-test.jscs-test.js","hospitalrun/tests/unit/services/filesystem-test.js","hospitalrun/tests/unit/services/filesystem-test.jscs-test.js","hospitalrun/tests/unit/utils/item-condition-test.js","hospitalrun/tests/unit/utils/item-condition-test.jscs-test.js","hospitalrun/tests/users/delete/controller.jscs-test.js","hospitalrun/tests/users/edit/controller.jscs-test.js","hospitalrun/tests/users/edit/route.jscs-test.js","hospitalrun/tests/users/index/controller.jscs-test.js","hospitalrun/tests/users/index/route.jscs-test.js","hospitalrun/tests/users/route.jscs-test.js","hospitalrun/tests/utils/date-sort.jscs-test.js","hospitalrun/tests/utils/email-validation.jscs-test.js","hospitalrun/tests/utils/item-condition.jscs-test.js","hospitalrun/tests/utils/patient-validation.jscs-test.js","hospitalrun/tests/utils/pouch-views.jscs-test.js","hospitalrun/tests/utils/select-values.jscs-test.js","hospitalrun/tests/visits/add-diagnosis/controller.jscs-test.js","hospitalrun/tests/visits/charge/controller.jscs-test.js","hospitalrun/tests/visits/delete/controller.jscs-test.js","hospitalrun/tests/visits/edit/controller.jscs-test.js","hospitalrun/tests/visits/edit/route.jscs-test.js","hospitalrun/tests/visits/procedures/delete/controller.jscs-test.js","hospitalrun/tests/visits/route.jscs-test.js","hospitalrun/tests/visits/vitals/delete/controller.jscs-test.js","hospitalrun/tests/visits/vitals/edit/controller.jscs-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('hospitalrun/tests/_base.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_base.scss should pass stylelint', function () {\n    ok('true , _base.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_bootstrap-theme.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_bootstrap-theme.scss should pass stylelint', function () {\n    ok('true , _bootstrap-theme.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_bootstrap.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_bootstrap.scss should pass stylelint', function () {\n    ok('true , _bootstrap.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_index.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_index.scss should pass stylelint', function () {\n    ok('true , _index.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_layout.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_layout.scss should pass stylelint', function () {\n    ok('true , _layout.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_loading_notice.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_loading_notice.scss should pass stylelint', function () {\n    ok('true , _loading_notice.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_sign_in_screen.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_sign_in_screen.scss should pass stylelint', function () {\n    ok('true , _sign_in_screen.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_temp_misc.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_temp_misc.scss should pass stylelint', function () {\n    ok('true , _temp_misc.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_typography.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_typography.scss should pass stylelint', function () {\n    ok('true , _typography.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/_variables_mixins.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('_variables_mixins.scss should pass stylelint', function () {\n    ok('true , _variables_mixins.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/acceptance/admin-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | admin', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /admin', function (assert) {\n    runWithPouchDump('admin', function () {\n      authenticateUser();\n      visit('/admin');\n      andThen(function () {\n        assert.equal(currentURL(), '/admin');\n        select('.lookup-type', 'Visit Types');\n        andThen(function () {\n          assert.equal(find('h3.panel-title').text(), 'Visit Types', 'Visit Types header is displayed');\n          assert.equal(find('td.lookup-type-value:first').text(), 'Admission', 'Admission visit type displays');\n          click('button:contains(Update)');\n          waitToAppear('.modal-dialog');\n          andThen(function () {\n            assert.equal(find('.modal-title').text(), 'List Saved', 'Lookup list is saved');\n          });\n        });\n      });\n    });\n  });\n\n  (0, _qunit.test)('add new lookup value', function (assert) {\n    runWithPouchDump('admin', function () {\n      authenticateUser();\n      visit('/admin');\n      andThen(function () {\n        assert.equal(currentURL(), '/admin');\n        select('.lookup-type', 'Anesthesiologists');\n        click('button:contains(Add Value)');\n        waitToAppear('.modal-dialog');\n        andThen(function () {\n          assert.equal(find('.modal-title').text(), 'Add Value', 'Add value modal is displayed');\n          fillIn('.lookup-type-value input', 'Dr Smith');\n          click('button:contains(Add):last');\n          andThen(function () {\n            waitToAppear('td.lookup-type-value:contains(Dr Smith)');\n            andThen(function () {\n              assert.equal(find('td.lookup-type-value:contains(Dr Smith)').length, 1, 'Added lookup type is added to list');\n            });\n          });\n        });\n      });\n    });\n  });\n\n  (0, _qunit.test)('delete lookup value', function (assert) {\n    runWithPouchDump('admin', function () {\n      authenticateUser();\n      visit('/admin');\n      andThen(function () {\n        assert.equal(currentURL(), '/admin');\n        select('.lookup-type', 'Anesthesia Types');\n        andThen(function () {\n          assert.equal(find('td.lookup-type-value:contains(Epidural)').length, 1, 'Have lookup type to delete from list');\n          click('button:contains(Delete)');\n          andThen(function () {\n            assert.equal(find('td.lookup-type-value:contains(Epidural)').length, 0, 'Deleted lookup type is removed from the list');\n          });\n        });\n      });\n    });\n  });\n\n  (0, _qunit.test)('Update address options', function (assert) {\n    runWithPouchDump('admin', function () {\n      authenticateUser();\n      visit('/admin/address');\n      andThen(function () {\n        assert.equal(currentURL(), '/admin/address');\n        fillIn('input', 'Address Label');\n        click('button:contains(Update)');\n        andThen(function () {\n          waitToAppear('.modal-dialog');\n          andThen(function () {\n            assert.equal(find('.modal-title').text(), 'Options Saved', 'Address Options Saved');\n          });\n        });\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/admin-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/admin-test.js should pass jscs', function () {\n    ok(true, 'acceptance/admin-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/appointments-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | appointments', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /appointments', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/appointments');\n      andThen(function () {\n        assert.equal(currentURL(), '/appointments');\n        findWithAssert('button:contains(new appointment)');\n        findWithAssert('.table-header');\n      });\n    });\n  });\n\n  (0, _qunit.test)('visiting /appointments/missed', function (assert) {\n    runWithPouchDump('appointments', function () {\n      authenticateUser();\n      var url = '/appointments';\n      // create an apointmet scheduled in the past\n      var today = moment();\n      var tomorrow = moment().add(1, 'days');\n      var status = 'Missed';\n      createAppointment(today, tomorrow, status);\n      visit(url);\n      andThen(function () {\n        assert.equal(currentURL(), url);\n        findWithAssert('.appointment-status:contains(' + status + ')');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Creating a new appointment', function (assert) {\n    runWithPouchDump('appointments', function () {\n      authenticateUser();\n      visit('/appointments/edit/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/appointments/edit/new');\n        findWithAssert('button:contains(Cancel)');\n        findWithAssert('button:contains(Add)');\n      });\n\n      createAppointment();\n\n      andThen(function () {\n        assert.equal(currentURL(), '/appointments');\n        assert.equal(find('tr').length, 2, 'New appointment has been added');\n        findWithAssert('button:contains(Add Visit)');\n        findWithAssert('button:contains(Edit)');\n        findWithAssert('button:contains(Delete)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Adding a visit to an appointment', function (assert) {\n    runWithPouchDump('appointments', function () {\n      authenticateUser();\n      createAppointment();\n      visit('/appointments');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/appointments');\n        assert.equal(find('tr').length, 2, 'New appointment has been added');\n        findWithAssert('button:contains(Add Visit)');\n        findWithAssert('button:contains(Edit)');\n        findWithAssert('button:contains(Delete)');\n      });\n\n      click('button:contains(Add Visit)');\n      andThen(function () {\n        assert.equal(currentURL(), '/visits/edit/new', 'Now in add visiting information route');\n      });\n      click('.panel-footer button:contains(Add)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Visit Saved', 'New visit has been saved');\n      });\n      click('button:contains(Ok)');\n      andThen(function () {\n        findWithAssert('button:contains(New Note)');\n        findWithAssert('button:contains(New Procedure)');\n        findWithAssert('button:contains(New Medication)');\n        findWithAssert('button:contains(New Lab)');\n        findWithAssert('button:contains(New Imaging)');\n        findWithAssert('button:contains(New Vitals)');\n        findWithAssert('button:contains(Add Item)');\n      });\n\n      click('button:contains(Return)');\n\n      click('button:contains(Return)');\n      andThen(function () {\n        assert.equal(currentURL(), '/patients');\n        findWithAssert('button:contains(Discharge)');\n        findWithAssert('button:contains(Edit)');\n        findWithAssert('button:contains(Delete)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Delete an appointment', function (assert) {\n    runWithPouchDump('appointments', function () {\n      authenticateUser();\n      createAppointment();\n      visit('/appointments');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/appointments');\n        assert.equal(find('.appointment-date').length, 1, 'One appointment is listed');\n        findWithAssert('button:contains(Add Visit)');\n        findWithAssert('button:contains(Edit)');\n        findWithAssert('button:contains(Delete)');\n      });\n\n      click('button:contains(Delete)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text().trim(), 'Delete Appointment', 'Delete Appointment confirmation modal has been displayed');\n      });\n      click('button:contains(Delete)');\n      waitToDisappear('.appointment-date');\n      andThen(function () {\n        assert.equal(find('.appointment-date').length, 0, 'No appointments are displayed');\n      });\n    });\n  });\n\n  function createAppointment() {\n    var startDate = arguments.length <= 0 || arguments[0] === undefined ? new Date() : arguments[0];\n    var endDate = arguments.length <= 1 || arguments[1] === undefined ? moment().add(1, 'day').toDate() : arguments[1];\n    var status = arguments.length <= 2 || arguments[2] === undefined ? 'Scheduled' : arguments[2];\n\n    visit('/appointments/edit/new');\n    fillIn('.test-patient-input .tt-input', 'Lennex Zinyando - P00017');\n    triggerEvent('.test-patient-input .tt-input', 'input');\n    triggerEvent('.test-patient-input .tt-input', 'blur');\n    select('.test-appointment-type', 'Admission');\n    select('.test-appointment-status', status);\n    waitToAppear('.test-appointment-start input');\n    andThen(function () {\n      selectDate('.test-appointment-start input', startDate);\n    });\n    andThen(function () {\n      selectDate('.test-appointment-end input', endDate);\n    });\n    fillIn('.test-appointment-location .tt-input', 'Harare');\n    triggerEvent('.test-appointment-location .tt-input', 'input');\n    triggerEvent('.test-appointment-location .tt-input', 'blur');\n    fillIn('.test-appointment-with', 'Dr Test');\n    click('button:contains(Add)');\n    waitToAppear('.table-header');\n  }\n});","define('hospitalrun/tests/acceptance/appointments-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/appointments-test.js should pass jscs', function () {\n    ok(true, 'acceptance/appointments-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/imaging-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | imaging', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /imaging', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/imaging');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging');\n        var newImagingButton = find('button:contains(new imaging)');\n        assert.equal(newImagingButton.length, 1, 'New Imaging button is visible');\n        findWithAssert('p:contains(No items found. )');\n        findWithAssert('a:contains(Create a new record?)');\n      });\n      click('button:contains(new imaging)');\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging/edit/new');\n      });\n    });\n  });\n\n  (0, _qunit.test)('create a new imaging request', function (assert) {\n    runWithPouchDump('imaging', function () {\n      authenticateUser();\n      visit('/imaging/edit/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging/edit/new');\n      });\n      fillIn('.patient-input .tt-input', 'Joe Bagadonuts - P00001');\n      triggerEvent('.patient-input .tt-input', 'input');\n      triggerEvent('.patient-input .tt-input', 'blur');\n      fillIn('.imaging-type-input .tt-input', 'Chest Scan');\n      fillIn('.radiologist-input .tt-input', 'Dr Test');\n      fillIn('.result-input input', 'Check is clear');\n      fillIn('textarea', 'Patient is healthy');\n      click('button:contains(Add)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Imaging Request Saved', 'Imaging Request was saved successfully');\n      });\n      click('button:contains(Ok)');\n      andThen(function () {\n        findWithAssert('button:contains(Update)');\n        findWithAssert('button:contains(Return)');\n        findWithAssert('button:contains(Complete)');\n      });\n      andThen(function () {\n        assert.equal(find('.patient-summary').length, 1, 'Patient summary is displayed');\n      });\n      click('button:contains(Return)');\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging');\n        assert.equal(find('tr').length, 3, 'Two imaging requests are displayed');\n      });\n    });\n  });\n\n  (0, _qunit.test)('completed requests are displayed', function (assert) {\n    runWithPouchDump('imaging', function () {\n      authenticateUser();\n      visit('/imaging/completed');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging/completed');\n        assert.equal(find('.table').length, 1, 'Requests table is visible');\n      });\n    });\n  });\n\n  (0, _qunit.test)('mark an imaging request as completed', function (assert) {\n    runWithPouchDump('imaging', function () {\n      authenticateUser();\n      visit('/imaging');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging');\n        assert.equal(find('.table').length, 1, 'Requests table is visible');\n        assert.equal(find('tr').length, 2, 'One imaging request not completed');\n      });\n      click('button:contains(Edit):first');\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging/edit/12DEDA58-4670-7A74-BA8B-9CC5E5CA82E7');\n        findWithAssert('button:contains(Update)');\n        findWithAssert('button:contains(Return)');\n        findWithAssert('button:contains(Complete)');\n      });\n      click('button:contains(Complete)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Imaging Request Completed', 'Imaging Request was saved successfully');\n      });\n      click('button:contains(Ok)');\n      click('button:contains(Return)');\n      andThen(function () {\n        assert.equal(currentURL(), '/imaging');\n        findWithAssert('a:contains(Create a new record?)');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/imaging-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/imaging-test.js should pass jscs', function () {\n    ok(true, 'acceptance/imaging-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/inventory-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | inventory', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /inventory', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/inventory');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory');\n        findWithAssert('button:contains(new request)');\n        findWithAssert('button:contains(inventory received)');\n        findWithAssert('p:contains(No requests found. )');\n        findWithAssert('a:contains(Create a new request?)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Adding a new inventory item', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/inventory/edit/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory/edit/new');\n      });\n      fillIn('.test-inv-name input', 'Biogesic');\n      select('.test-inv-rank', 'B');\n      fillIn('textarea', 'Biogesic nga medisina');\n      select('.test-inv-type', 'Medication');\n      fillIn('.test-inv-cross input', '2600');\n      fillIn('.test-inv-reorder input', '100');\n      fillIn('.test-inv-price input', '5');\n      select('.test-inv-dist-unit', 'tablet');\n      fillIn('.test-inv-quantity input', '1000');\n      fillIn('.test-inv-cost input', '4000');\n      select('.test-inv-unit', 'tablet');\n      fillIn('.test-vendor .tt-input', 'Alpha Pharmacy');\n      triggerEvent('.test-vendor .tt-input', 'input');\n      click('button:contains(Add)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Inventory Item Saved', 'Inventory Item was saved successfully');\n      });\n      click('button:contains(Ok)');\n\n      andThen(function () {\n        findWithAssert('button:contains(Add Purchase)');\n        findWithAssert('button:contains(Update)');\n        findWithAssert('button:contains(Return)');\n      });\n\n      click('button:contains(Return)');\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory/listing');\n        assert.equal(find('tr').length, 2, 'One item is listed');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Deleting the last inventory item', function (assert) {\n    runWithPouchDump('inventory', function () {\n      authenticateUser();\n      visit('/inventory/listing');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory/listing');\n        click('button:contains(Delete)');\n        waitToAppear('.modal-dialog');\n        andThen(function () {\n          assert.equal(find('.modal-title').text(), 'Delete Item', 'Deleting confirmation.');\n        });\n        click('.modal-content button:contains(Delete)');\n        waitToAppear('.panel-body .alert-info');\n        andThen(function () {\n          assert.equal(currentURL(), '/inventory/listing');\n          findWithAssert('a:contains(Create a new record?)');\n        });\n      });\n    });\n  });\n\n  (0, _qunit.test)('Creating a new inventory request', function (assert) {\n    runWithPouchDump('inventory', function () {\n      authenticateUser();\n      visit('/inventory/request/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory/request/new');\n      });\n      fillIn('.test-inv-item .tt-input', 'Biogesic - m00001 (1000 available)');\n      triggerEvent('.test-inv-item .tt-input', 'input');\n      triggerEvent('.test-inv-item .tt-input', 'blur');\n      fillIn('.test-inv-quantity input', 500);\n      fillIn('.test-delivery-location .tt-input', 'Harare');\n      fillIn('.test-delivery-aisle .tt-input', 'C100');\n      fillIn('.test-bill-to .tt-input', 'Accounts Dept');\n      click('button:contains(Add)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Request Updated', 'New request has been saved');\n      });\n      click('button:contains(Ok)');\n      andThen(function () {\n        findWithAssert('button:contains(Fulfill)');\n        findWithAssert('button:contains(Cancel)');\n      });\n      click('button:contains(Cancel)');\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory');\n        assert.equal(find('tr').length, 3, 'Two requests are now displayed');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Fulfilling an inventory request', function (assert) {\n    runWithPouchDump('inventory', function () {\n      authenticateUser();\n      visit('/inventory');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory');\n        var tableRows = find('tr').length;\n        assert.equal(tableRows, 2, 'One request not fulfilled');\n      });\n      click('button:contains(Fulfill)');\n\n      andThen(function () {\n        findWithAssert('button:contains(Fulfill)');\n        findWithAssert('button:contains(Cancel)');\n      });\n\n      click('button:contains(Fulfill)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        var modalTitle = find('.modal-title');\n        assert.equal(modalTitle.text(), 'Request Fulfilled', 'Inventory request has been fulfilled');\n      });\n\n      click('button:contains(Ok)');\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Receiving inventory', function (assert) {\n    runWithPouchDump('inventory', function () {\n      authenticateUser();\n      visit('/inventory/batch/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory/batch/new');\n      });\n      fillIn('.test-vendor .tt-input', 'Alpha Pharmacy');\n      triggerEvent('.test-vendor .tt-input', 'input');\n      triggerEvent('.test-vendor .tt-input', 'blur');\n      fillIn('.test-invoice-number input', 'P2345');\n      fillIn('.test-inv-item .tt-input', 'Biogesic - m00001');\n      triggerEvent('.test-inv-item .tt-input', 'input');\n      triggerEvent('.test-inv-item .tt-input', 'blur');\n      keyEvent('.test-inv-item .tt-input', 'keypress', 9);\n      fillIn('.test-inv-quantity input', 500);\n      fillIn('.test-inv-cost input', '2000');\n      click('button:contains(Save)');\n      waitToAppear('.modal-title');\n\n      andThen(function () {\n        var modalTitle = find('.modal-title');\n        assert.equal(modalTitle.text(), 'Inventory Purchases Saved', 'Inventory has been received');\n      });\n      click('button:contains(Ok)');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/inventory/listing');\n      });\n    });\n  });\n\n  testSimpleReportForm('Detailed Adjustment');\n  testSimpleReportForm('Detailed Purchase');\n  testSimpleReportForm('Detailed Stock Usage');\n  testSimpleReportForm('Detailed Stock Transfer');\n  testSimpleReportForm('Detailed Expenses');\n  testSimpleReportForm('Expiration Date');\n  testSimpleReportForm('Summary Expenses');\n  testSimpleReportForm('Summary Purchase');\n  testSimpleReportForm('Summary Stock Usage');\n  testSimpleReportForm('Summary Stock Transfer');\n  testSimpleReportForm('Finance Summary');\n  testSingleDateReportForm('Inventory By Location');\n  testSingleDateReportForm('Inventory Valuation');\n\n  function testSimpleReportForm(reportName) {\n    (0, _qunit.test)(reportName + ' report can be generated', function (assert) {\n      runWithPouchDump('default', function () {\n        authenticateUser();\n        visit('/inventory/reports');\n        andThen(function () {\n          assert.equal(currentURL(), '/inventory/reports');\n        });\n        var startDate = moment('2015-10-01');\n        var endDate = moment('2015-10-31');\n        selectDate('.test-start-date input', startDate.toDate());\n        selectDate('.test-end-date input', endDate.toDate());\n        select('#report-type', '' + reportName);\n        click('button:contains(Generate Report)');\n        waitToAppear('.panel-title');\n\n        andThen(function () {\n          var reportTitle = reportName + ' Report ' + startDate.format('l') + ' - ' + endDate.format('l');\n          assert.equal(find('.panel-title').text().trim(), reportTitle, reportName + ' Report generated');\n          findWithAssert('a:contains(Export Report)');\n        });\n      });\n    });\n  }\n\n  function testSingleDateReportForm(reportName) {\n    (0, _qunit.test)(reportName + ' report can be generated', function (assert) {\n      runWithPouchDump('default', function () {\n        authenticateUser();\n        visit('/inventory/reports');\n        andThen(function () {\n          assert.equal(currentURL(), '/inventory/reports');\n        });\n        select('#report-type', '' + reportName);\n        click('button:contains(Generate Report)');\n        waitToAppear('.panel-title');\n\n        andThen(function () {\n          assert.equal(find('.panel-title').text().trim(), reportName + ' Report ' + moment().format('l'), reportName + ' Report generated');\n          findWithAssert('a:contains(Export Report)');\n        });\n      });\n    });\n  }\n});","define('hospitalrun/tests/acceptance/inventory-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/inventory-test.js should pass jscs', function () {\n    ok(true, 'acceptance/inventory-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/invoices-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | invoices', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /invoices', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/invoices');\n      andThen(function () {\n        assert.equal(currentURL(), '/invoices');\n      });\n    });\n  });\n\n  (0, _qunit.test)('create invoice', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/invoices/edit/new');\n      andThen(function () {\n        assert.equal(currentURL(), '/invoices/edit/new');\n      });\n      fillIn('.invoice-patient .tt-input', 'Joe Bagadonuts - TCH 00001');\n      triggerEvent('.invoice-patient .tt-input', 'input');\n      triggerEvent('.invoice-patient .tt-input', 'blur');\n      waitToAppear('.invoice-visit option:contains((Admission))');\n      andThen(function () {\n        select('.invoice-visit', '(Admission)');\n        fillIn('.external-invoice-no input', 'inv000002');\n      });\n      waitToAppear('button:contains(Update)');\n      andThen(function () {\n        click('button:contains(Update)');\n      });\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Invoice Saved', 'Invoice was saved successfully');\n      });\n    });\n  });\n\n  (0, _qunit.test)('delete invoice', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/invoices');\n      andThen(function () {\n        assert.equal(currentURL(), '/invoices');\n        assert.equal(find('.invoice-number:contains(inv00001)').length, 1, 'Invoice is displayed for deletion');\n      });\n      click('button:contains(Delete)');\n      andThen(function () {\n        waitToAppear('.modal-dialog');\n      });\n      andThen(function () {\n        assert.equal(find('.alert').text().trim(), 'Are you sure you wish to delete <strong>inv00001</strong>?', 'Invoice deletion confirm displays');\n      });\n      click('button:contains(Delete):last');\n      waitToDisappear('.invoice-number:contains(inv00001)');\n      andThen(function () {\n        assert.equal(find('.invoice-number:contains(inv00001)').length, 0, 'Invoice is deleted');\n      });\n    });\n  });\n\n  (0, _qunit.test)('add payment', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/invoices');\n      andThen(function () {\n        assert.equal(currentURL(), '/invoices');\n      });\n      click('button:contains(Add Payment)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Add Payment', 'Add Payment modal displays');\n      });\n      fillIn('.payment-amount input', 100);\n      click('.update-payment-btn');\n      waitToAppear('.modal-title:contains(Payment Added)');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Payment Added', 'Payment was saved successfully');\n      });\n    });\n  });\n\n  (0, _qunit.test)('add deposit', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/invoices');\n      andThen(function () {\n        assert.equal(currentURL(), '/invoices');\n      });\n      click('button:contains(add deposit)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Add Deposit', 'Add Deposit modal displays');\n      });\n      fillIn('.payment-amount input', 140);\n      fillIn('.payment-patient .tt-input', 'Joe Bagadonuts - TCH 00001');\n      triggerEvent('.payment-patient .tt-input', 'input');\n      triggerEvent('.payment-patient .tt-input', 'blur');\n      click('.update-payment-btn');\n      waitToAppear('.modal-title:contains(Deposit Added)');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Deposit Added', 'Deposit was saved successfully');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/invoices-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/invoices-test.js should pass jscs', function () {\n    ok(true, 'acceptance/invoices-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/labs-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | labs', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /labs', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/labs');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/labs');\n        findWithAssert('a:contains(Create a new record?)');\n        findWithAssert('button:contains(new lab)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Adding a new lab request', function (assert) {\n    runWithPouchDump('labs', function () {\n      authenticateUser();\n      visit('/labs');\n\n      click('button:contains(new lab)');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/labs/edit/new');\n      });\n\n      fillIn('.test-patient-name .tt-input', 'Lennex Zinyando - P00017');\n      triggerEvent('.test-patient-name .tt-input', 'input');\n      triggerEvent('.test-patient-name .tt-input', 'blur');\n      fillIn('.test-lab-type .tt-input', 'Chest Scan');\n      fillIn('.test-result-input input', 'Chest is clear');\n      fillIn('textarea', 'Dr test ordered another scan');\n      click('button:contains(Add)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Lab Request Saved', 'Lab Request was saved successfully');\n        findWithAssert('.patient-summary');\n      });\n\n      click('.modal-footer button:contains(Ok)');\n\n      andThen(function () {\n        assert.equal(find('.patient-summary').length, 1, 'Patient summary is displayed');\n      });\n\n      click('.panel-footer button:contains(Return)');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/labs');\n        assert.equal(find('tr').length, 3, 'Two lab requests are displayed');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Marking a lab request as completed', function (assert) {\n    runWithPouchDump('labs', function () {\n      authenticateUser();\n      visit('/labs/completed');\n\n      andThen(function () {\n        assert.equal(find('.alert-info').text().trim(), 'No completed items found.', 'No completed requests are displayed');\n      });\n\n      visit('/labs');\n      click('button:contains(Edit)');\n      click('button:contains(Complete)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Lab Request Completed', 'Lab Request was completed successfully');\n      });\n\n      click('.modal-footer button:contains(Ok)');\n      click('.panel-footer button:contains(Return)');\n      visit('/labs/completed');\n\n      andThen(function () {\n        assert.equal(find('tr').length, 2, 'One completed request is displayed');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/labs-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/labs-test.js should pass jscs', function () {\n    ok(true, 'acceptance/labs-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/login-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app', 'ember-cli-fake-server'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp, _emberCliFakeServer) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | login', {\n    beforeEach: function beforeEach() {\n      _emberCliFakeServer['default'].start();\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _emberCliFakeServer['default'].stop();\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting / redirects user to login', function (assert) {\n    assert.expect(3);\n    runWithPouchDump('default', function () {\n      visit('/');\n\n      (0, _emberCliFakeServer.stubRequest)('post', '/db/_session', function (request) {\n        assert.equal(request.requestBody, 'name=hradmin&password=test', 'credential are sent to the server');\n        request.ok({ 'ok': true, 'name': 'hradmin', 'roles': ['System Administrator', 'admin', 'user'] });\n      });\n\n      (0, _emberCliFakeServer.stubRequest)('post', '/chkuser', function (request) {\n        assert.equal(request.requestBody, 'name=hradmin', 'username is sent to /chkuser');\n        request.ok({ 'prefix': 'p1', 'role': 'System Administrator' });\n      });\n\n      andThen(function () {\n        assert.equal(currentURL(), '/login');\n      });\n\n      fillIn('#identification', 'hradmin');\n      fillIn('#password', 'test');\n      click('button:contains(Sign in)');\n    });\n  });\n\n  (0, _qunit.test)('incorrect credentials shows an error message on the screen', function (assert) {\n    assert.expect(2);\n    runWithPouchDump('default', function () {\n      visit('/');\n\n      var errorMessage = 'Username or password is incorrect.';\n\n      (0, _emberCliFakeServer.stubRequest)('post', '/db/_session', function (request) {\n        assert.equal(request.requestBody, 'name=hradmin&password=tset', 'credential are sent to the server');\n        request.error({ 'error': 'unauthorized', 'reason': errorMessage });\n      });\n\n      fillIn('#identification', 'hradmin');\n      fillIn('#password', 'tset');\n      click('button:contains(Sign in)');\n\n      andThen(function () {\n        assert.equal(find('.form-signin-alert').text(), errorMessage, 'Error reason is shown');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/login-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/login-test.js should pass jscs', function () {\n    ok(true, 'acceptance/login-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/medication-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | medication', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /medication', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/medication');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/medication');\n        findWithAssert('button:contains(new request)');\n        findWithAssert('button:contains(dispense medication)');\n        findWithAssert('button:contains(return medication)');\n        findWithAssert('p:contains(No items found. )');\n        findWithAssert('a:contains(Create a new medication request?)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('creating a new medication request', function (assert) {\n    runWithPouchDump('medication', function () {\n      authenticateUser();\n      visit('/medication/edit/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/medication/edit/new');\n      });\n      fillIn('.test-patient-input .tt-input', 'Lennex Zinyando - P00017');\n      triggerEvent('.test-patient-input .tt-input', 'input');\n      triggerEvent('.test-patient-input .tt-input', 'blur');\n      waitToAppear('.have-inventory-items');\n      andThen(function () {\n        fillIn('.test-medication-input .tt-input', 'Biogesic - m00001 (950 available)');\n        triggerEvent('.test-medication-input .tt-input', 'input');\n        triggerEvent('.test-medication-input .tt-input', 'blur');\n        keyEvent('.test-medication-input .tt-input', 'keypress', 9);\n      });\n      fillIn('textarea', '30 Biogesic Pills');\n      fillIn('.test-quantity-input input', '30');\n      click('button:contains(Add)');\n\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text().trim(), 'Medication Request Saved', 'New medication request has been saved');\n      });\n\n      click('button:contains(Ok)');\n      click('button:contains(Return)');\n      andThen(function () {\n        assert.equal(currentURL(), '/medication');\n        assert.equal(find('tr').length, 3, 'New medication request is now displayed');\n      });\n    });\n  });\n\n  (0, _qunit.test)('fulfilling a medication request', function (assert) {\n    runWithPouchDump('medication', function () {\n      authenticateUser();\n      visit('/medication');\n      click('button:contains(Fulfill)');\n\n      andThen(function () {\n        assert.equal(find('.patient-summary').length, 1, 'Patient summary is displayed');\n      });\n\n      click('button:contains(Fulfill)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        assert.equal(find('.modal-title').text().trim(), 'Medication Request Fulfilled', 'Medication Request has been Fulfilled');\n      });\n\n      click('button:contains(Ok)');\n      click('button:contains(Return)');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/medication');\n        findWithAssert('p:contains(No items found. )');\n        findWithAssert('a:contains(Create a new medication request?)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('returning medication', function (assert) {\n    runWithPouchDump('medication', function () {\n      authenticateUser();\n      visit('/medication/return/new');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/medication/return/new');\n      });\n      waitToAppear('.have-inventory-items');\n      andThen(function () {\n        fillIn('.test-medication-input .tt-input', 'Biogesic - m00001');\n        triggerEvent('.test-medication-input .tt-input', 'input');\n        triggerEvent('.test-medication-input .tt-input', 'blur');\n        keyEvent('.test-medication-input .tt-input', 'keypress', 9);\n      });\n      fillIn('.test-medication-quantity input', 30);\n      click('button:contains(Return Medication)');\n      waitToAppear('.modal-dialog');\n\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Medication Returned', 'Medication has been return successfully');\n      });\n      click('button:contains(Ok)');\n\n      andThen(function () {\n        assert.equal(currentURL(), '/medication');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/medication-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/medication-test.js should pass jscs', function () {\n    ok(true, 'acceptance/medication-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/patient-notes-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | patient notes', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('patient notes crud testing', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/patients/edit/new');\n      andThen(function () {\n        assert.equal(currentURL(), '/patients/edit/new');\n        fillIn('.test-first-name input', 'John');\n        fillIn('.test-last-name input', 'Doe');\n        click('.panel-footer button:contains(Add)');\n        waitToAppear('.modal-dialog');\n      });\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Patient Saved', 'Patient record has been saved');\n        click('button:contains(Close)');\n        waitToAppear('.patient-summary');\n      });\n      andThen(function () {\n        findWithAssert('.patient-summary');\n        click('[data-test-selector=visits-tab]');\n      });\n      andThen(function () {\n        findWithAssert('#visits');\n        click('button:contains(New Visit)');\n      });\n      andThen(function () {\n        assert.equal(currentURL(), '/visits/edit/new', 'Now in add visiting information route');\n        click('.panel-footer button:contains(Add)');\n        waitToAppear('.modal-dialog');\n      });\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Visit Saved', 'New visit has been saved');\n        click('button:contains(Ok)');\n      });\n      andThen(function () {\n        findWithAssert('button:contains(New Note)');\n        findWithAssert('button:contains(New Procedure)');\n        findWithAssert('button:contains(New Medication)');\n        findWithAssert('button:contains(New Lab)');\n        findWithAssert('button:contains(New Imaging)');\n        findWithAssert('button:contains(New Vitals)');\n        findWithAssert('button:contains(Add Item)');\n        assert.equal(find('button:contains(New Note)').length, 1, 'New Note button in visible');\n        click('button:contains(New Note)');\n      });\n      andThen(function () {\n        assert.equal(find('label:contains(Note)').length, 1, 'Notes modal appeared.');\n        fillIn('.test-note-content textarea', 'This is a note.');\n        fillIn('.test-note-attribution input', 'Dr. Nick');\n        click('.modal-footer button:contains(Add)');\n      });\n      andThen(function () {\n        waitToAppear('#visit-notes table tr td:contains(This is a note.)');\n      });\n      andThen(function () {\n        assert.equal(find('#visit-notes table tr td:contains(This is a note.)').length, 1, 'Successfully added note.');\n        click('#visit-notes table tr td button:contains(Edit)');\n        waitToAppear('.modal-dialog');\n      });\n      andThen(function () {\n        fillIn('.test-note-content textarea', 'This is an updated note.');\n        click('.modal-footer button:contains(Update)');\n        waitToAppear('#visit-notes table tr td:contains(This is an updated note.)');\n      });\n      andThen(function () {\n        assert.equal(find('#visit-notes table tr td:contains(This is an updated note.)').length, 1, 'Successfully updated note.');\n        click('#visit-notes table tr td button:contains(Delete)');\n        waitToAppear('.modal-dialog');\n      });\n      andThen(function () {\n        click('.modal-footer button:contains(Ok)');\n      });\n      andThen(function () {\n        assert.equal(find('#visit-notes table tr td:contains(This is an updated note.)').length, 0, 'Successfully deleted note.');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/patient-notes-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/patient-notes-test.js should pass jscs', function () {\n    ok(true, 'acceptance/patient-notes-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/patients-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | patients', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /patients route', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/patients');\n      andThen(function () {\n        assert.equal(currentURL(), '/patients');\n        var noPatientsFound = find('[data-test-selector=\"no-patients-found\"]');\n        assert.equal(noPatientsFound.text().trim(), 'No patients found. Create a new patient record?', 'no records found');\n        var newPatientButton = find('button:contains(+ new patient)');\n        assert.equal(newPatientButton.length, 1, 'Add new patient button is visible');\n      });\n      click('button:contains(+ new patient)');\n      andThen(function () {\n        assert.equal(currentURL(), '/patients/edit/new');\n      });\n    });\n  });\n\n  (0, _qunit.test)('View reports tab', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/patients/reports');\n\n      andThen(function () {\n        var generateReportButton = find('button:contains(Generate Report)');\n        assert.equal(currentURL(), '/patients/reports');\n        assert.equal(generateReportButton.length, 1, 'Generate Report button is visible');\n        var reportType = find('[data-test-selector=\"select-report-type\"]');\n        assert.equal(reportType.length, 1, 'Report type select is visible');\n        assert.equal(reportType.find(':selected').text().trim(), 'Admissions Detail', 'Default value selected\"');\n      });\n    });\n  });\n\n  testSimpleReportForm('Admissions Summary');\n  testSimpleReportForm('Diagnostic Testing');\n  testSimpleReportForm('Discharges Detail');\n  testSimpleReportForm('Discharges Summary');\n  testSimpleReportForm('Procedures Detail');\n\n  (0, _qunit.test)('View reports tab | Patient Status', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/patients/reports');\n      select('[data-test-selector=\"select-report-type\"] select', 'Patient Status');\n\n      andThen(function () {\n        var generateReportButton = find('button:contains(Generate Report)');\n        assert.equal(currentURL(), '/patients/reports');\n        assert.equal(generateReportButton.length, 1, 'Generate Report button is visible');\n        var reportType = find('[data-test-selector=\"select-report-type\"] select');\n        assert.equal(reportType.length, 1, 'Report type select is visible');\n        assert.equal(reportType.find(':selected').text().trim(), 'Patient Status', 'Default value selected\"');\n      });\n    });\n  });\n\n  (0, _qunit.test)('Adding a new patient record', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      visit('/patients/edit/new');\n      andThen(function () {\n        assert.equal(currentURL(), '/patients/edit/new');\n      });\n\n      fillIn('.test-first-name input', 'John');\n      fillIn('.test-last-name input', 'Doe');\n      click('.panel-footer button:contains(Add)');\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Patient Saved', 'Patient record has been saved');\n        assert.equal(find('.modal-body').text().trim(), 'The patient record for John Doe has been saved.', 'Record has been saved');\n      });\n      click('button:contains(Close)');\n      waitToAppear('.patient-summary');\n\n      andThen(function () {\n        findWithAssert('.patient-summary');\n      });\n      andThen(function () {\n        findWithAssert('#general');\n      });\n    });\n  });\n\n  function testSimpleReportForm(reportName) {\n    (0, _qunit.test)('View reports tab | ' + reportName + ' shows start and end dates', function (assert) {\n      runWithPouchDump('default', function () {\n        authenticateUser();\n        visit('/patients/reports');\n        select('[data-test-selector=\"select-report-type\"] select', reportName);\n\n        andThen(function () {\n          var reportStartDate = find('[data-test-selector=\"select-report-start-date\"]');\n          var reportEndDate = find('[data-test-selector=\"select-report-end-date\"]');\n          assert.equal(reportStartDate.length, 1, 'Report start date select is visible');\n          assert.equal(reportEndDate.length, 1, 'Report end date select is visible');\n          var reportType = find('[data-test-selector=\"select-report-type\"] select');\n          assert.equal(reportType.find(':selected').text().trim(), reportName, reportName + ' option selected');\n        });\n      });\n    });\n  }\n});","define('hospitalrun/tests/acceptance/patients-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/patients-test.js should pass jscs', function () {\n    ok(true, 'acceptance/patients-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/pricing-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  function verifyPricingLists(path, includesPrices, excludesPrices, assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit(path);\n      andThen(function () {\n        assert.equal(currentURL(), path);\n        includesPrices.forEach(function (priceName) {\n          assert.equal(find('.price-name:contains(' + priceName + ')').length, 1, priceName + ' displays');\n        });\n        excludesPrices.forEach(function (priceName) {\n          assert.equal(find('.price-name:contains(' + priceName + ')').length, 0, priceName + ' is not present');\n        });\n      });\n    });\n  }\n\n  (0, _qunit.module)('Acceptance | pricing', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /pricing', function (assert) {\n    var includesPrices = ['Xray Hand', 'Blood test', 'Leg Casting', 'Gauze pad'];\n    verifyPricingLists('/pricing', includesPrices, [], assert);\n  });\n\n  (0, _qunit.test)('visiting /pricing/imaging', function (assert) {\n    var excludesPrices = ['Blood test', 'Leg Casting', 'Gauze pad'];\n    var includesPrices = ['Xray Hand'];\n    verifyPricingLists('/pricing/imaging', includesPrices, excludesPrices, assert);\n  });\n\n  (0, _qunit.test)('visiting /pricing/lab', function (assert) {\n    var excludesPrices = ['Xray Hand', 'Leg Casting', 'Gauze pad'];\n    var includesPrices = ['Blood test'];\n    verifyPricingLists('/pricing/lab', includesPrices, excludesPrices, assert);\n  });\n\n  (0, _qunit.test)('visiting /pricing/procedure', function (assert) {\n    var excludesPrices = ['Xray Hand', 'Blood test', 'Gauze pad'];\n    var includesPrices = ['Leg Casting'];\n    verifyPricingLists('/pricing/procedure', includesPrices, excludesPrices, assert);\n  });\n\n  (0, _qunit.test)('visiting /pricing/ward', function (assert) {\n    var excludesPrices = ['Xray Hand', 'Blood test', 'Leg Casting'];\n    var includesPrices = ['Gauze pad'];\n    verifyPricingLists('/pricing/ward', includesPrices, excludesPrices, assert);\n  });\n\n  (0, _qunit.test)('create new price', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/pricing/edit/new');\n      andThen(function () {\n        assert.equal(currentURL(), '/pricing/edit/new');\n        fillIn('.price-name input', 'Xray Foot');\n        fillIn('.price-amount input', 100);\n        fillIn('.price-department input', 'Imaging');\n        select('.price-category', 'Imaging');\n        fillIn('.price-type', 'Imaging Procedure');\n        click('button:contains(Add):last');\n        waitToAppear('.modal-dialog');\n        andThen(function () {\n          assert.equal(find('.modal-title').text(), 'Pricing Item Saved', 'Pricing Item saved');\n          click('button:contains(Ok)');\n        });\n        andThen(function () {\n          click('button:contains(Add Override)');\n          waitToAppear('.modal-dialog');\n        });\n        andThen(function () {\n          assert.equal(find('.modal-title').text(), 'Add Override', 'Add Override Dialog displays');\n          select('.pricing-profile', 'Half off');\n          fillIn('.pricing-override-price input', 20);\n        });\n        andThen(function () {\n          click('button:contains(Add):last');\n          waitToAppear('.override-profile');\n        });\n        andThen(function () {\n          assert.equal(find('.override-profile').text(), 'Half off', 'Pricing override saved');\n        });\n      });\n    });\n  });\n\n  (0, _qunit.test)('delete price', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/pricing/lab');\n      andThen(function () {\n        assert.equal(currentURL(), '/pricing/lab');\n        assert.equal(find('.price-name:contains(Blood test)').length, 1, 'Price exists to delete');\n        click('button:contains(Delete)');\n      });\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.alert').text().trim(), 'Are you sure you wish to delete <strong>Blood test</strong>?', 'Pricing item is displayed for deletion');\n      });\n      click('button:contains(Delete):last');\n      waitToDisappear('.price-name:contains(Blood test)');\n      andThen(function () {\n        assert.equal(find('.price-name:contains(Blood test)').length, 0, 'Price disappears from price list');\n      });\n    });\n  });\n\n  (0, _qunit.test)('create new pricing profile', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/pricing/profiles');\n      andThen(function () {\n        assert.equal(currentURL(), '/pricing/profiles');\n        click('button:contains(+ new item)');\n        waitToAppear('.modal-dialog');\n        andThen(function () {\n          assert.equal(find('.modal-title').text(), 'New Pricing Profile', 'New Pricing Profile modal appears');\n        });\n        fillIn('.pricing-profile-name input', 'Quarter Off');\n        fillIn('.pricing-profile-percentage input', 25);\n        fillIn('.pricing-profile-discount input', 10);\n        andThen(function () {\n          click('button:contains(Add)');\n        });\n        waitToAppear('.modal-title:contains(Pricing Profile Saved)');\n        click('button:contains(Ok)');\n        waitToAppear('.pricing-profile-name:contains(Quarter Off)');\n        andThen(function () {\n          assert.equal(find('.pricing-profile-name:contains(Quarter Off)').text(), 'Quarter Off', 'New price profile displays');\n        });\n      });\n    });\n  });\n\n  (0, _qunit.test)('delete pricing profile', function (assert) {\n    runWithPouchDump('billing', function () {\n      authenticateUser();\n      visit('/pricing/profiles');\n      andThen(function () {\n        assert.equal(currentURL(), '/pricing/profiles');\n        assert.equal(find('.pricing-profile-name:contains(Half off)').length, 1, 'Pricing profile exists to delete');\n        click('button:contains(Delete)');\n      });\n      waitToAppear('.modal-dialog');\n      andThen(function () {\n        assert.equal(find('.modal-title').text().trim(), 'Delete Profile', 'Pricing Profile delete confirmation is displayed');\n      });\n      click('button:contains(Ok)');\n      waitToDisappear('.pricing-profile-name:contains(Half off)');\n      andThen(function () {\n        assert.equal(find('.pricing-profile-name:contains(Half off)').length, 0, 'Pricing profile disappears from list');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/pricing-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/pricing-test.js should pass jscs', function () {\n    ok(true, 'acceptance/pricing-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/role-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | roles', {\n    beforeEach: function beforeEach() {\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /admin/roles', function (assert) {\n    runWithPouchDump('admin', function () {\n      authenticateUser();\n      visit('/admin/roles');\n      andThen(function () {\n        assert.equal(currentURL(), '/admin/roles');\n        select('.role-select', 'Doctor');\n      });\n      andThen(function () {\n        assert.equal(find('.checkbox-appointments input:checked').length, 0, 'Appointments checkbox is not checked');\n        assert.equal(find('.checkbox-add_appointment input:checked').length, 0, 'Add appointments checkbox is not checked');\n      });\n      click('.checkbox-appointments input');\n      click('.checkbox-add_appointment input');\n      andThen(function () {\n        assert.equal(find('.checkbox-appointments input:checked').length, 1, 'Appointments checkbox is checked');\n        assert.equal(find('.checkbox-add_appointment input:checked').length, 1, 'Add appointments checkbox is checked');\n        click('button:contains(Update)');\n        waitToAppear('.modal-dialog');\n      });\n      andThen(function () {\n        assert.equal(find('.modal-title').text(), 'Role Saved', 'Role has been saved');\n        assert.equal(find('.modal-body').text().trim(), 'The Doctor role has been saved.', 'Doctor role has been saved');\n        click('button:contains(Ok)');\n        invalidateSession();\n        visit('/login');\n      });\n      andThen(function () {\n        authenticateUser({\n          name: 'doctor@hospitalrun.io',\n          roles: ['Doctor', 'user'],\n          role: 'Doctor',\n          prefix: 'p1'\n        });\n      });\n      visit('/appointments/edit/new');\n      andThen(function () {\n        assert.equal(currentURL(), '/appointments/edit/new', 'Doctor can now navigate to new appointments');\n        assert.equal(find('.view-current-title').text(), 'New Appointment', 'New appointment screen displays');\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/role-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/role-test.js should pass jscs', function () {\n    ok(true, 'acceptance/role-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/acceptance/users-test', ['exports', 'ember', 'qunit', 'hospitalrun/tests/helpers/start-app', 'ember-cli-fake-server'], function (exports, _ember, _qunit, _hospitalrunTestsHelpersStartApp, _emberCliFakeServer) {\n  'use strict';\n\n  function addAllUsers(assert) {\n    (0, _emberCliFakeServer.stubRequest)('get', '/db/_users/_all_docs', function (request) {\n      var expectedQuery = {\n        include_docs: 'true',\n        startkey: '\"org.couchdb.user\"'\n      };\n      assert.equal(JSON.stringify(request.queryParams), JSON.stringify(expectedQuery), 'All Users request sent to the server');\n      request.ok({\n        'total_rows': 1,\n        'offset': 1,\n        'rows': [{\n          'id': 'org.couchdb.user:hradmin',\n          'key': 'org.couchdb.user:hradmin',\n          'value': { 'rev': '1-242f3d5b5eb8596144f8a6300f9f5a2f' },\n          'doc': {\n            '_id': 'org.couchdb.user:hradmin',\n            '_rev': '1-242f3d5b5eb8596144f8a6300f9f5a2f',\n            'password_scheme': 'pwdscheme',\n            'iterations': 10,\n            'name': 'hradmin',\n            'roles': ['System Administrator', 'admin', 'user'],\n            'type': 'user',\n            'userPrefix': 'p',\n            'derived_key': 'derivedkeyhere',\n            'salt': 'saltgoeshere',\n            'displayName': 'HospitalRun Administrator',\n            'email': 'hradmin@hospitalrun.io'\n          }\n        }, {\n          'id': 'org.couchdb.user:joe@donuts.com',\n          'key': 'org.couchdb.user:joe@donuts.com',\n          'value': {\n            'rev': '1-ef3d54502f2cc8e8f73d8547881f0836'\n          },\n          'doc': {\n            '_id': 'org.couchdb.user:joe@donuts.com',\n            '_rev': '1-ef3d54502f2cc8e8f73d8547881f0836',\n            'password_scheme': 'pbkdf2',\n            'iterations': 10,\n            'displayName': 'Joe Bagadonuts',\n            'email': 'joe@donuts.com',\n            'name': 'joe@donuts.com',\n            'roles': ['Hospital Administrator', 'user'],\n            'userPrefix': 'p01',\n            'type': 'user',\n            'derived_key': 'derivedkeyhere',\n            'salt': 'saltgoeshere'\n          }\n        }]\n      });\n    });\n  }\n\n  (0, _qunit.module)('Acceptance | users', {\n    beforeEach: function beforeEach() {\n      _emberCliFakeServer['default'].start();\n      this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _emberCliFakeServer['default'].stop();\n      _ember['default'].run(this.application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /admin/users', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      addAllUsers(assert);\n\n      visit('/admin/users');\n      andThen(function () {\n        assert.equal(currentURL(), '/admin/users');\n        assert.equal(find('td.user-display-name:first').text(), 'HospitalRun Administrator');\n        assert.equal(find('td.user-name:first').text(), 'hradmin');\n        assert.equal(find('td.user-email:first').text(), 'hradmin@hospitalrun.io');\n        assert.equal(find('td.user-role:first').text(), 'System Administrator');\n      });\n    });\n  });\n\n  (0, _qunit.test)('create new user', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      addAllUsers(assert);\n      visit('/admin/users');\n      (0, _emberCliFakeServer.stubRequest)('put', '/db/_users/org.couchdb.user:jane@donuts.com', function (request) {\n        var expectedBody = {\n          _id: 'org.couchdb.user:jane@donuts.com',\n          deleted: false,\n          displayName: 'Jane Bagadonuts',\n          email: 'jane@donuts.com',\n          name: 'jane@donuts.com',\n          password: 'password',\n          roles: ['Hospital Administrator', 'user'],\n          userPrefix: 'p02',\n          type: 'user'\n        };\n        assert.equal(request.requestBody, JSON.stringify(expectedBody), 'New user data sent to the server');\n        request.ok({\n          'ok': true,\n          'id': 'org.couchdb.user:jane@donuts.com',\n          'rev': '1-ef3d54502f2cc8e8f73d8547881f0836'\n        });\n      });\n\n      visit('/admin/users/edit/new');\n      andThen(function () {\n        select('.user-role', 'Hospital Administrator');\n        fillIn('.user-display-name input', 'Jane Bagadonuts');\n        fillIn('.user-email input', 'jane@donuts.com');\n        fillIn('.user-password input', 'password');\n        click('button:contains(Add)');\n        waitToAppear('.modal-dialog');\n        andThen(function () {\n          assert.equal(find('.modal-title').text(), 'User Saved', 'User was saved successfully');\n        });\n        click('button:contains(Ok)');\n      });\n    });\n  });\n\n  (0, _qunit.test)('delete user', function (assert) {\n    runWithPouchDump('default', function () {\n      authenticateUser();\n      addAllUsers(assert);\n      (0, _emberCliFakeServer.stubRequest)('put', '/db/_users/org.couchdb.user:joe@donuts.com', function (request) {\n        var expectedBody = {\n          _id: 'org.couchdb.user:joe@donuts.com',\n          derived_key: 'derivedkeyhere',\n          deleted: true,\n          displayName: 'Joe Bagadonuts',\n          email: 'joe@donuts.com',\n          iterations: 10,\n          name: 'joe@donuts.com',\n          password_scheme: 'pbkdf2',\n          _rev: '1-ef3d54502f2cc8e8f73d8547881f0836',\n          roles: ['deleted'],\n          salt: 'saltgoeshere',\n          userPrefix: 'p01',\n          type: 'user'\n        };\n        assert.equal(request.requestBody, JSON.stringify(expectedBody), 'Delete user request sent to the server');\n        request.ok({\n          'ok': true,\n          'id': 'org.couchdb.user:joe@donuts.com',\n          'rev': '1-ef3d54502f2cc8e8f73d8547881f0836'\n        });\n      });\n\n      visit('/admin/users');\n      andThen(function () {\n        click('button:contains(Delete):last');\n        waitToAppear('.modal-dialog');\n        andThen(function () {\n          assert.equal(find('.alert').text().trim(), 'Are you sure you wish to delete the user joe@donuts.com?', 'User is displayed for deletion');\n        });\n        click('button:contains(Delete):last');\n        andThen(function () {\n          assert.equal(find('.user-email:contains(joe@donuts.com)').length, 0, 'User disappears from user list');\n        });\n      });\n    });\n  });\n});","define('hospitalrun/tests/acceptance/users-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/users-test.js should pass jscs', function () {\n    ok(true, 'acceptance/users-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/adapters/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/application.js should pass jscs', function () {\n    ok(true, 'adapters/application.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/adapters/user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/user.js should pass jscs', function () {\n    ok(true, 'adapters/user.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/address/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/address');\n  test('admin/address/controller.js should pass jscs', function () {\n    ok(true, 'admin/address/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/address/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/address');\n  test('admin/address/route.js should pass jscs', function () {\n    ok(true, 'admin/address/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/loaddb/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/loaddb');\n  test('admin/loaddb/controller.js should pass jscs', function () {\n    ok(true, 'admin/loaddb/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/loaddb/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/loaddb');\n  test('admin/loaddb/route.js should pass jscs', function () {\n    ok(true, 'admin/loaddb/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/lookup/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/lookup');\n  test('admin/lookup/controller.js should pass jscs', function () {\n    ok(true, 'admin/lookup/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/lookup/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/lookup/edit');\n  test('admin/lookup/edit/controller.js should pass jscs', function () {\n    ok(true, 'admin/lookup/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/lookup/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/lookup');\n  test('admin/lookup/route.js should pass jscs', function () {\n    ok(true, 'admin/lookup/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/query/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/query');\n  test('admin/query/controller.js should pass jscs', function () {\n    ok(true, 'admin/query/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/query/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/query');\n  test('admin/query/route.js should pass jscs', function () {\n    ok(true, 'admin/query/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/roles/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/roles');\n  test('admin/roles/controller.js should pass jscs', function () {\n    ok(true, 'admin/roles/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/roles/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin/roles');\n  test('admin/roles/route.js should pass jscs', function () {\n    ok(true, 'admin/roles/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/admin/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - admin');\n  test('admin/route.js should pass jscs', function () {\n    ok(true, 'admin/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('app.js should pass jscs', function () {\n    ok(true, 'app.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/app.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('app.scss should pass stylelint', function () {\n    ok('true , app.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/appointments/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/delete');\n  test('appointments/delete/controller.js should pass jscs', function () {\n    ok(true, 'appointments/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/edit');\n  test('appointments/edit/controller.js should pass jscs', function () {\n    ok(true, 'appointments/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/edit');\n  test('appointments/edit/route.js should pass jscs', function () {\n    ok(true, 'appointments/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/index');\n  test('appointments/index/controller.js should pass jscs', function () {\n    ok(true, 'appointments/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/index');\n  test('appointments/index/route.js should pass jscs', function () {\n    ok(true, 'appointments/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/missed/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/missed');\n  test('appointments/missed/controller.js should pass jscs', function () {\n    ok(true, 'appointments/missed/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/missed/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/missed');\n  test('appointments/missed/route.js should pass jscs', function () {\n    ok(true, 'appointments/missed/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments');\n  test('appointments/route.js should pass jscs', function () {\n    ok(true, 'appointments/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/search/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/search');\n  test('appointments/search/controller.js should pass jscs', function () {\n    ok(true, 'appointments/search/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/search/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/search');\n  test('appointments/search/route.js should pass jscs', function () {\n    ok(true, 'appointments/search/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/today/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/today');\n  test('appointments/today/controller.js should pass jscs', function () {\n    ok(true, 'appointments/today/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/appointments/today/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - appointments/today');\n  test('appointments/today/route.js should pass jscs', function () {\n    ok(true, 'appointments/today/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/authenticators/custom.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - authenticators');\n  test('authenticators/custom.js should pass jscs', function () {\n    ok(true, 'authenticators/custom.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/_form_styles.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_form_styles.scss should pass stylelint', function () {\n    ok('true , components/_form_styles.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_imaging.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_imaging.scss should pass stylelint', function () {\n    ok('true , components/_imaging.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_labs.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_labs.scss should pass stylelint', function () {\n    ok('true , components/_labs.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_pagination.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_pagination.scss should pass stylelint', function () {\n    ok('true , components/_pagination.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_panel.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_panel.scss should pass stylelint', function () {\n    ok('true , components/_panel.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_patient_history.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_patient_history.scss should pass stylelint', function () {\n    ok('true , components/_patient_history.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_patient_summary.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_patient_summary.scss should pass stylelint', function () {\n    ok('true , components/_patient_summary.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_sidebar_nav.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_sidebar_nav.scss should pass stylelint', function () {\n    ok('true , components/_sidebar_nav.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_tab_content.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_tab_content.scss should pass stylelint', function () {\n    ok('true , components/_tab_content.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/_tab_nav.stylelint-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('Style Lint');\n  test('components/_tab_nav.scss should pass stylelint', function () {\n    ok('true , components/_tab_nav.scss passed stylelint');\n  });\n});","define('hospitalrun/tests/components/action-checkbox.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/action-checkbox.js should pass jscs', function () {\n    ok(true, 'components/action-checkbox.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/array-display.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/array-display.js should pass jscs', function () {\n    ok(true, 'components/array-display.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/charge-quantity.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/charge-quantity.js should pass jscs', function () {\n    ok(true, 'components/charge-quantity.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/charges-by-type-tab.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/charges-by-type-tab.js should pass jscs', function () {\n    ok(true, 'components/charges-by-type-tab.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/checkbox-or-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/checkbox-or-typeahead.js should pass jscs', function () {\n    ok(true, 'components/checkbox-or-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/custom-form.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/custom-form.js should pass jscs', function () {\n    ok(true, 'components/custom-form.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/date-input.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/date-input.js should pass jscs', function () {\n    ok(true, 'components/date-input.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/date-picker.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/date-picker.js should pass jscs', function () {\n    ok(true, 'components/date-picker.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/edit-panel.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/edit-panel.js should pass jscs', function () {\n    ok(true, 'components/edit-panel.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/ext-radio.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/ext-radio.js should pass jscs', function () {\n    ok(true, 'components/ext-radio.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/file-upload.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/file-upload.js should pass jscs', function () {\n    ok(true, 'components/file-upload.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/icd10-pcs-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/icd10-pcs-typeahead.js should pass jscs', function () {\n    ok(true, 'components/icd10-pcs-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/icd10-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/icd10-typeahead.js should pass jscs', function () {\n    ok(true, 'components/icd10-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/image-upload.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/image-upload.js should pass jscs', function () {\n    ok(true, 'components/image-upload.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/inventory-location-picker.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/inventory-location-picker.js should pass jscs', function () {\n    ok(true, 'components/inventory-location-picker.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/inventory-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/inventory-typeahead.js should pass jscs', function () {\n    ok(true, 'components/inventory-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/item-listing.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/item-listing.js should pass jscs', function () {\n    ok(true, 'components/item-listing.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/loading-message.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/loading-message.js should pass jscs', function () {\n    ok(true, 'components/loading-message.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/location-select.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/location-select.js should pass jscs', function () {\n    ok(true, 'components/location-select.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/modal-dialog.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/modal-dialog.js should pass jscs', function () {\n    ok(true, 'components/modal-dialog.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/nav-menu.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/nav-menu.js should pass jscs', function () {\n    ok(true, 'components/nav-menu.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/nav-paging.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/nav-paging.js should pass jscs', function () {\n    ok(true, 'components/nav-paging.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/patient-summary.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/patient-summary.js should pass jscs', function () {\n    ok(true, 'components/patient-summary.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/patient-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/patient-typeahead.js should pass jscs', function () {\n    ok(true, 'components/patient-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/photo-display.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/photo-display.js should pass jscs', function () {\n    ok(true, 'components/photo-display.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/price-list.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/price-list.js should pass jscs', function () {\n    ok(true, 'components/price-list.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/pricing-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/pricing-typeahead.js should pass jscs', function () {\n    ok(true, 'components/pricing-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/print-this.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/print-this.js should pass jscs', function () {\n    ok(true, 'components/print-this.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/quantity-calc.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/quantity-calc.js should pass jscs', function () {\n    ok(true, 'components/quantity-calc.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/quantity-conv.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/quantity-conv.js should pass jscs', function () {\n    ok(true, 'components/quantity-conv.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/role-select.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/role-select.js should pass jscs', function () {\n    ok(true, 'components/role-select.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/search-listing.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/search-listing.js should pass jscs', function () {\n    ok(true, 'components/search-listing.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/select-or-typeahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/select-or-typeahead.js should pass jscs', function () {\n    ok(true, 'components/select-or-typeahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/smart-prescription.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/smart-prescription.js should pass jscs', function () {\n    ok(true, 'components/smart-prescription.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/sortable-column.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/sortable-column.js should pass jscs', function () {\n    ok(true, 'components/sortable-column.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/take-photo.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/take-photo.js should pass jscs', function () {\n    ok(true, 'components/take-photo.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/text-search.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/text-search.js should pass jscs', function () {\n    ok(true, 'components/text-search.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/components/type-ahead.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/type-ahead.js should pass jscs', function () {\n    ok(true, 'components/type-ahead.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/abstract-delete-controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/abstract-delete-controller.js should pass jscs', function () {\n    ok(true, 'controllers/abstract-delete-controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/abstract-edit-controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/abstract-edit-controller.js should pass jscs', function () {\n    ok(true, 'controllers/abstract-edit-controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/abstract-paged-controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/abstract-paged-controller.js should pass jscs', function () {\n    ok(true, 'controllers/abstract-paged-controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/abstract-report-controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/abstract-report-controller.js should pass jscs', function () {\n    ok(true, 'controllers/abstract-report-controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/application.js should pass jscs', function () {\n    ok(true, 'controllers/application.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/index.js should pass jscs', function () {\n    ok(true, 'controllers/index.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/login.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/login.js should pass jscs', function () {\n    ok(true, 'controllers/login.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/controllers/navigation.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/navigation.js should pass jscs', function () {\n    ok(true, 'controllers/navigation.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/dialog/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - dialog');\n  test('dialog/controller.js should pass jscs', function () {\n    ok(true, 'dialog/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/finishgauth/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - finishgauth');\n  test('finishgauth/route.js should pass jscs', function () {\n    ok(true, 'finishgauth/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/authenticate-user', ['exports', 'ember', 'hospitalrun/tests/helpers/ember-simple-auth'], function (exports, _ember, _hospitalrunTestsHelpersEmberSimpleAuth) {\n  'use strict';\n\n  var merge = _ember['default'].merge;\n\n  _ember['default'].Test.registerHelper('authenticateUser', function (app) {\n    var attrs = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var expiresAt = new Date().getTime() + 600000;\n    (0, _hospitalrunTestsHelpersEmberSimpleAuth.authenticateSession)(app, merge({\n      name: 'hradmin',\n      roles: ['System Administrator', 'admin', 'user'],\n      expires_at: expiresAt,\n      role: 'System Administrator',\n      prefix: 'p1'\n    }, attrs));\n  });\n\n  _ember['default'].Test.registerHelper('invalidateSession', function (app) {\n    (0, _hospitalrunTestsHelpersEmberSimpleAuth.invalidateSession)(app);\n  });\n});","define('hospitalrun/tests/helpers/authenticate-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/authenticate-user.js should pass jscs', function () {\n    ok(true, 'helpers/authenticate-user.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/date-format.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/date-format.js should pass jscs', function () {\n    ok(true, 'helpers/date-format.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('hospitalrun/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/destroy-app.js should pass jscs', function () {\n    ok(true, 'helpers/destroy-app.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('hospitalrun/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  ;\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  ;\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n\n  ;\n});","define('hospitalrun/tests/helpers/html-line-break.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/html-line-break.js should pass jscs', function () {\n    ok(true, 'helpers/html-line-break.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/is-equal-array.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/is-equal-array.js should pass jscs', function () {\n    ok(true, 'helpers/is-equal-array.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/is-equal.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/is-equal.js should pass jscs', function () {\n    ok(true, 'helpers/is-equal.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/is-not.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/is-not.js should pass jscs', function () {\n    ok(true, 'helpers/is-not.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'hospitalrun/tests/helpers/start-app', 'hospitalrun/tests/helpers/destroy-app'], function (exports, _qunit, _hospitalrunTestsHelpersStartApp, _hospitalrunTestsHelpersDestroyApp) {\n  'use strict';\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _hospitalrunTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _hospitalrunTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('hospitalrun/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/module-for-acceptance.js should pass jscs', function () {\n    ok(true, 'helpers/module-for-acceptance.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/number-format.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/number-format.js should pass jscs', function () {\n    ok(true, 'helpers/number-format.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/read-path.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/read-path.js should pass jscs', function () {\n    ok(true, 'helpers/read-path.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/resolver', ['exports', 'hospitalrun/resolver', 'hospitalrun/config/environment'], function (exports, _hospitalrunResolver, _hospitalrunConfigEnvironment) {\n  'use strict';\n\n  var resolver = _hospitalrunResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _hospitalrunConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _hospitalrunConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('hospitalrun/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/resolver.js should pass jscs', function () {\n    ok(true, 'helpers/resolver.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/run-with-pouch-dump', ['exports', 'ember', 'pouchdb', 'hospitalrun/services/database', 'hospitalrun/services/config'], function (exports, _ember, _pouchdb, _hospitalrunServicesDatabase, _hospitalrunServicesConfig) {\n  /* jshint ignore:start */\n  'use strict';\n\n  function cleanupDatabases(dbs) {\n    return wait().then(function () {\n      return new _ember['default'].RSVP.Promise(function (resolve, reject) {\n        if (dbs.main.changesListener) {\n          dbs.main.changesListener.cancel();\n          dbs.main.changesListener.on('complete', function () {\n            destroyDatabases(dbs).then(resolve, reject);\n          });\n        } else {\n          destroyDatabases(dbs).then(resolve, reject);\n        }\n      });\n    });\n  }\n\n  function destroyDatabases(dbs) {\n    var destroyQueue = [];\n    destroyQueue.push(dbs.config.info().then(function () {\n      return dbs.config.destroy();\n    }));\n    destroyQueue.push(dbs.main.info().then(function () {\n      return dbs.main.destroy();\n    }));\n    return _ember['default'].RSVP.all(destroyQueue);\n  }\n\n  function runWithPouchDumpAsyncHelper(app, dumpName, functionToRun) {\n\n    var db = new _pouchdb['default']('hospitalrun-test-database', {\n      adapter: 'memory'\n    });\n    var configDB = new _pouchdb['default']('hospitalrun-test-config-database', {\n      adapter: 'memory'\n    });\n    var dump = require('hospitalrun/tests/fixtures/' + dumpName)['default'];\n    var promise = db.load(dump, {\n      proxy: 'main'\n    });\n\n    var InMemoryDatabaseService = _hospitalrunServicesDatabase['default'].extend({\n      createDB: function createDB() {\n        return promise.then(function () {\n          return db;\n        });\n      }\n    });\n\n    var InMemoryConfigService = _hospitalrunServicesConfig['default'].extend({\n      createDB: function createDB() {\n        return _ember['default'].RSVP.resolve(configDB);\n      },\n      replicateConfigDB: function replicateConfigDB() {}\n    });\n\n    app.__deprecatedInstance__.register('service:config', InMemoryConfigService);\n    app.__deprecatedInstance__.register('service:database', InMemoryDatabaseService);\n\n    return new _ember['default'].RSVP.Promise(function (resolve) {\n      promise.then(function () {\n        functionToRun();\n        andThen(function () {\n          cleanupDatabases({\n            config: configDB,\n            main: db\n          }).then(resolve);\n        });\n      });\n    });\n  }\n\n  _ember['default'].Test.registerAsyncHelper('runWithPouchDump', runWithPouchDumpAsyncHelper);\n  /* jshint ignore:end */\n});","define('hospitalrun/tests/helpers/run-with-pouch-dump.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/run-with-pouch-dump.js should pass jscs', function () {\n    ok(true, 'helpers/run-with-pouch-dump.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/select-date', ['exports', 'ember'], function (exports, _ember) {\n  // Derived from https://raw.githubusercontent.com/edgycircle/ember-pikaday/master/addon/helpers/pikaday.js\n  'use strict';\n\n  function triggerNativeEvent(element, eventName) {\n    if (document.createEvent) {\n      var event = document.createEvent('Events');\n      event.initEvent(eventName, true, false);\n      element.dispatchEvent(event);\n    } else {\n      element.fireEvent('on' + eventName);\n    }\n  }\n\n  _ember['default'].Test.registerAsyncHelper('selectDate', function (app, selector, date) {\n    return new _ember['default'].RSVP.Promise(function (resolve) {\n      click(selector);\n      waitToAppear('.pika-single:not(.is-hidden)').then(function () {\n        fillIn(selector, moment(date).format('l'));\n        andThen(function () {\n          triggerNativeEvent(app.$(selector)[0], 'change');\n          resolve();\n        });\n      });\n    });\n  });\n});","define('hospitalrun/tests/helpers/select-date.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/select-date.js should pass jscs', function () {\n    ok(true, 'helpers/select-date.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/select', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  _ember['default'].Test.registerAsyncHelper('select', function (app, selector) {\n    for (var _len = arguments.length, texts = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      texts[_key - 2] = arguments[_key];\n    }\n\n    var $options = app.testHelpers.findWithAssert(selector + ' option');\n\n    $options.each(function () {\n      var _this = this;\n\n      var $option = _ember['default'].$(this);\n\n      _ember['default'].run(function () {\n        _this.selected = texts.some(function (text) {\n          return $option.is(':contains(\\'' + text + '\\')');\n        });\n        if (_this.selected) {\n          $option.trigger('change');\n        }\n      });\n    });\n\n    return app.testHelpers.wait();\n  });\n});","define('hospitalrun/tests/helpers/select.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/select.js should pass jscs', function () {\n    ok(true, 'helpers/select.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/start-app', ['exports', 'ember', 'hospitalrun/app', 'hospitalrun/config/environment', 'hospitalrun/tests/helpers/run-with-pouch-dump', 'hospitalrun/tests/helpers/authenticate-user', 'hospitalrun/tests/helpers/select', 'hospitalrun/tests/helpers/select-date', 'hospitalrun/tests/helpers/wait-to-appear'], function (exports, _ember, _hospitalrunApp, _hospitalrunConfigEnvironment, _hospitalrunTestsHelpersRunWithPouchDump, _hospitalrunTestsHelpersAuthenticateUser, _hospitalrunTestsHelpersSelect, _hospitalrunTestsHelpersSelectDate, _hospitalrunTestsHelpersWaitToAppear) {\n  'use strict';\n\n  exports['default'] = startApp;\n\n  function createTranslationWrapper(original, context) {\n    function t(str, data) {\n      var result = original.call(context, str, data);\n      if (result.indexOf && result.indexOf('Missing translation') > -1) {\n        throw new Error(result);\n      }\n\n      return result.string || result;\n    }\n\n    return t;\n  }\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _hospitalrunConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _hospitalrunApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    var translationService = application.__container__.lookup('service:i18n');\n    application.__container__.lookup('service:i18n').t = createTranslationWrapper(translationService.t, translationService);\n\n    return application;\n  }\n});","define('hospitalrun/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/start-app.js should pass jscs', function () {\n    ok(true, 'helpers/start-app.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/helpers/validate-properties', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n  exports.testValidPropertyValues = testValidPropertyValues;\n  exports.testInvalidPropertyValues = testInvalidPropertyValues;\n\n  var run = _ember['default'].run;\n\n  function validateValues(object, propertyName, values, isTestForValid) {\n    var promise = null;\n    var validatedValues = [];\n\n    values.forEach(function (value) {\n      function handleValidation(errors) {\n        var hasErrors = object.get('errors.' + propertyName + '.firstObject');\n        if (hasErrors && !isTestForValid || !hasErrors && isTestForValid) {\n          validatedValues.push(value);\n        }\n      }\n\n      run(object, 'set', propertyName, value);\n\n      var objectPromise = null;\n      run(function () {\n        objectPromise = object.validate().then(handleValidation, handleValidation);\n      });\n\n      // Since we are setting the values in a different run loop as we are validating them,\n      // we need to chain the promises so that they run sequentially. The wrong value will\n      // be validated if the promises execute concurrently\n      promise = promise ? promise.then(objectPromise) : objectPromise;\n    });\n\n    return promise.then(function () {\n      return validatedValues;\n    });\n  }\n\n  function testPropertyValues(propertyName, values, isTestForValid, context) {\n    var validOrInvalid = isTestForValid ? 'Valid' : 'Invalid';\n    var testName = validOrInvalid + ' ' + propertyName;\n\n    (0, _emberQunit.test)(testName, function (assert) {\n      var object = this.subject();\n\n      if (context && typeof context === 'function') {\n        context(object);\n      }\n\n      // Use QUnit.dump.parse so null and undefined can be printed as literal 'null' and\n      // 'undefined' strings in the assert message.\n      var valuesString = QUnit.dump.parse(values).replace(/\\n(\\s+)?/g, '').replace(/,/g, ', ');\n      var assertMessage = 'Expected ' + propertyName + ' to have ' + validOrInvalid.toLowerCase() + ' values: ' + valuesString;\n\n      return validateValues(object, propertyName, values, isTestForValid).then(function (validatedValues) {\n        assert.deepEqual(validatedValues, values, assertMessage);\n      });\n    });\n  }\n\n  function testValidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, true, context);\n  }\n\n  function testInvalidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, false, context);\n  }\n});","define('hospitalrun/tests/helpers/wait-to-appear', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  function isVisible(selector) {\n    return $(selector).length > 0;\n  }\n\n  function checkVisibility(selector, interval, resolve, visibility) {\n    if (isVisible(selector) === visibility) {\n      resolve($(selector));\n    } else {\n      _ember['default'].run.later(null, function () {\n        checkVisibility(selector, interval, resolve, visibility);\n      }, interval);\n    }\n  }\n\n  function waitToAppear(app, selector) {\n    var interval = arguments.length <= 2 || arguments[2] === undefined ? 200 : arguments[2];\n\n    return new _ember['default'].RSVP.Promise(function (resolve) {\n      checkVisibility(selector, interval, resolve, true);\n    });\n  }\n\n  function waitToDisappear(app, selector) {\n    var interval = arguments.length <= 2 || arguments[2] === undefined ? 200 : arguments[2];\n\n    return new _ember['default'].RSVP.Promise(function (resolve) {\n      checkVisibility(selector, interval, resolve, false);\n    });\n  }\n  _ember['default'].Test.registerAsyncHelper('waitToAppear', waitToAppear);\n  _ember['default'].Test.registerAsyncHelper('waitToDisappear', waitToDisappear);\n});","define('hospitalrun/tests/helpers/wait-to-appear.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/wait-to-appear.js should pass jscs', function () {\n    ok(true, 'helpers/wait-to-appear.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/charge/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/charge');\n  test('imaging/charge/controller.js should pass jscs', function () {\n    ok(true, 'imaging/charge/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/completed/completed-list-item/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/completed/completed-list-item');\n  test('imaging/completed/completed-list-item/component.js should pass jscs', function () {\n    ok(true, 'imaging/completed/completed-list-item/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/completed/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/completed');\n  test('imaging/completed/controller.js should pass jscs', function () {\n    ok(true, 'imaging/completed/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/completed/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/completed');\n  test('imaging/completed/route.js should pass jscs', function () {\n    ok(true, 'imaging/completed/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/delete');\n  test('imaging/delete/controller.js should pass jscs', function () {\n    ok(true, 'imaging/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/edit');\n  test('imaging/edit/controller.js should pass jscs', function () {\n    ok(true, 'imaging/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/edit');\n  test('imaging/edit/route.js should pass jscs', function () {\n    ok(true, 'imaging/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/index');\n  test('imaging/index/controller.js should pass jscs', function () {\n    ok(true, 'imaging/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/index/imaging-edit-button/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/index/imaging-edit-button');\n  test('imaging/index/imaging-edit-button/component.js should pass jscs', function () {\n    ok(true, 'imaging/index/imaging-edit-button/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/index/requested-list-item/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/index/requested-list-item');\n  test('imaging/index/requested-list-item/component.js should pass jscs', function () {\n    ok(true, 'imaging/index/requested-list-item/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging/index');\n  test('imaging/index/route.js should pass jscs', function () {\n    ok(true, 'imaging/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/imaging/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - imaging');\n  test('imaging/route.js should pass jscs', function () {\n    ok(true, 'imaging/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/initializers/i18n.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - initializers');\n  test('initializers/i18n.js should pass jscs', function () {\n    ok(true, 'initializers/i18n.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/integration/components/inventory/rank-select-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('inventory/rank-select', 'Integration | Component | inventory/rank select', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders correctly', function (assert) {\n    this.set('value', null);\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.6',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 4,\n              'column': 4\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'inventory/rank-select', [], ['property', 'value', 'prompt', 'n/a'], ['loc', [null, [1, 0], [4, 4]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    // options\n    var $options = this.$('option');\n    assert.equal($options.length, 4, 'Should render 4 options');\n    assert.equal($options[0].value, 'null', 'First option value is null (prompt)');\n    assert.equal($options[0].innerHTML.trim(), 'n/a', 'First option label is prompt');\n    assert.equal($options[1].value, 'A', 'Second option is \"A\"');\n    assert.equal($options[2].value, $options[2].innerHTML.trim(), 'Values are similar as labels');\n  });\n});","define('hospitalrun/tests/integration/components/inventory/rank-select-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components/inventory');\n  test('integration/components/inventory/rank-select-test.js should pass jscs', function () {\n    ok(true, 'integration/components/inventory/rank-select-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/adjust/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/adjust');\n  test('inventory/adjust/controller.js should pass jscs', function () {\n    ok(true, 'inventory/adjust/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/barcode/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/barcode');\n  test('inventory/barcode/controller.js should pass jscs', function () {\n    ok(true, 'inventory/barcode/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/barcode/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/barcode');\n  test('inventory/barcode/route.js should pass jscs', function () {\n    ok(true, 'inventory/barcode/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/batch/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/batch');\n  test('inventory/batch/controller.js should pass jscs', function () {\n    ok(true, 'inventory/batch/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/batch/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/batch');\n  test('inventory/batch/route.js should pass jscs', function () {\n    ok(true, 'inventory/batch/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/delete');\n  test('inventory/delete/controller.js should pass jscs', function () {\n    ok(true, 'inventory/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/edit');\n  test('inventory/edit/controller.js should pass jscs', function () {\n    ok(true, 'inventory/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/edit');\n  test('inventory/edit/route.js should pass jscs', function () {\n    ok(true, 'inventory/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/index');\n  test('inventory/index/controller.js should pass jscs', function () {\n    ok(true, 'inventory/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/index');\n  test('inventory/index/route.js should pass jscs', function () {\n    ok(true, 'inventory/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/listing/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/listing');\n  test('inventory/listing/controller.js should pass jscs', function () {\n    ok(true, 'inventory/listing/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/listing/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/listing');\n  test('inventory/listing/route.js should pass jscs', function () {\n    ok(true, 'inventory/listing/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/purchase/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/purchase/edit');\n  test('inventory/purchase/edit/controller.js should pass jscs', function () {\n    ok(true, 'inventory/purchase/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/quick-add/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/quick-add');\n  test('inventory/quick-add/controller.js should pass jscs', function () {\n    ok(true, 'inventory/quick-add/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/rank-select/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/rank-select');\n  test('inventory/rank-select/component.js should pass jscs', function () {\n    ok(true, 'inventory/rank-select/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/reports/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/reports');\n  test('inventory/reports/controller.js should pass jscs', function () {\n    ok(true, 'inventory/reports/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/reports/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/reports');\n  test('inventory/reports/route.js should pass jscs', function () {\n    ok(true, 'inventory/reports/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/request/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/request');\n  test('inventory/request/controller.js should pass jscs', function () {\n    ok(true, 'inventory/request/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/request/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/request');\n  test('inventory/request/route.js should pass jscs', function () {\n    ok(true, 'inventory/request/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory');\n  test('inventory/route.js should pass jscs', function () {\n    ok(true, 'inventory/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/search/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/search');\n  test('inventory/search/controller.js should pass jscs', function () {\n    ok(true, 'inventory/search/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/search/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/search');\n  test('inventory/search/route.js should pass jscs', function () {\n    ok(true, 'inventory/search/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/inventory/transfer/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - inventory/transfer');\n  test('inventory/transfer/controller.js should pass jscs', function () {\n    ok(true, 'inventory/transfer/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/add-line-item/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/add-line-item');\n  test('invoices/add-line-item/controller.js should pass jscs', function () {\n    ok(true, 'invoices/add-line-item/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/delete');\n  test('invoices/delete/controller.js should pass jscs', function () {\n    ok(true, 'invoices/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/edit');\n  test('invoices/edit/controller.js should pass jscs', function () {\n    ok(true, 'invoices/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/edit');\n  test('invoices/edit/route.js should pass jscs', function () {\n    ok(true, 'invoices/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/index');\n  test('invoices/index/controller.js should pass jscs', function () {\n    ok(true, 'invoices/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/index');\n  test('invoices/index/route.js should pass jscs', function () {\n    ok(true, 'invoices/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/payment/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/payment');\n  test('invoices/payment/controller.js should pass jscs', function () {\n    ok(true, 'invoices/payment/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices');\n  test('invoices/route.js should pass jscs', function () {\n    ok(true, 'invoices/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/invoices/search/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - invoices/search');\n  test('invoices/search/route.js should pass jscs', function () {\n    ok(true, 'invoices/search/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/charge/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/charge');\n  test('labs/charge/controller.js should pass jscs', function () {\n    ok(true, 'labs/charge/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/completed/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/completed');\n  test('labs/completed/controller.js should pass jscs', function () {\n    ok(true, 'labs/completed/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/completed/labs-completed-list-item/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/completed/labs-completed-list-item');\n  test('labs/completed/labs-completed-list-item/component.js should pass jscs', function () {\n    ok(true, 'labs/completed/labs-completed-list-item/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/completed/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/completed');\n  test('labs/completed/route.js should pass jscs', function () {\n    ok(true, 'labs/completed/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/delete');\n  test('labs/delete/controller.js should pass jscs', function () {\n    ok(true, 'labs/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/edit');\n  test('labs/edit/controller.js should pass jscs', function () {\n    ok(true, 'labs/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/edit');\n  test('labs/edit/route.js should pass jscs', function () {\n    ok(true, 'labs/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/index');\n  test('labs/index/controller.js should pass jscs', function () {\n    ok(true, 'labs/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/index/labs-edit-button/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/index/labs-edit-button');\n  test('labs/index/labs-edit-button/component.js should pass jscs', function () {\n    ok(true, 'labs/index/labs-edit-button/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/index/labs-list-item/component.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/index/labs-list-item');\n  test('labs/index/labs-list-item/component.js should pass jscs', function () {\n    ok(true, 'labs/index/labs-list-item/component.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs/index');\n  test('labs/index/route.js should pass jscs', function () {\n    ok(true, 'labs/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/labs/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - labs');\n  test('labs/route.js should pass jscs', function () {\n    ok(true, 'labs/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/de/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/de');\n  test('locales/de/translations.js should pass jscs', function () {\n    ok(true, 'locales/de/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/en/config.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en');\n  test('locales/en/config.js should pass jscs', function () {\n    ok(true, 'locales/en/config.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/en/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en');\n  test('locales/en/translations.js should pass jscs', function () {\n    ok(true, 'locales/en/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/es/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/es');\n  test('locales/es/translations.js should pass jscs', function () {\n    ok(true, 'locales/es/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/es-CO/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/es-CO');\n  test('locales/es-CO/translations.js should pass jscs', function () {\n    ok(true, 'locales/es-CO/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/fr/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/fr');\n  test('locales/fr/translations.js should pass jscs', function () {\n    ok(true, 'locales/fr/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/pt-BR/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/pt-BR');\n  test('locales/pt-BR/translations.js should pass jscs', function () {\n    ok(true, 'locales/pt-BR/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/ru/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru');\n  test('locales/ru/translations.js should pass jscs', function () {\n    ok(true, 'locales/ru/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/locales/tr/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/tr');\n  test('locales/tr/translations.js should pass jscs', function () {\n    ok(true, 'locales/tr/translations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/completed/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/completed');\n  test('medication/completed/controller.js should pass jscs', function () {\n    ok(true, 'medication/completed/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/completed/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/completed');\n  test('medication/completed/route.js should pass jscs', function () {\n    ok(true, 'medication/completed/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/delete');\n  test('medication/delete/controller.js should pass jscs', function () {\n    ok(true, 'medication/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/edit');\n  test('medication/edit/controller.js should pass jscs', function () {\n    ok(true, 'medication/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/edit');\n  test('medication/edit/route.js should pass jscs', function () {\n    ok(true, 'medication/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/index');\n  test('medication/index/controller.js should pass jscs', function () {\n    ok(true, 'medication/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/index');\n  test('medication/index/route.js should pass jscs', function () {\n    ok(true, 'medication/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/return/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/return');\n  test('medication/return/controller.js should pass jscs', function () {\n    ok(true, 'medication/return/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/return/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/return');\n  test('medication/return/route.js should pass jscs', function () {\n    ok(true, 'medication/return/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication');\n  test('medication/route.js should pass jscs', function () {\n    ok(true, 'medication/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/medication/search/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - medication/search');\n  test('medication/search/route.js should pass jscs', function () {\n    ok(true, 'medication/search/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/appointment-statuses.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/appointment-statuses.js should pass jscs', function () {\n    ok(true, 'mixins/appointment-statuses.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/billing-categories.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/billing-categories.js should pass jscs', function () {\n    ok(true, 'mixins/billing-categories.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/blood-types.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/blood-types.js should pass jscs', function () {\n    ok(true, 'mixins/blood-types.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/can-edit-requested.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/can-edit-requested.js should pass jscs', function () {\n    ok(true, 'mixins/can-edit-requested.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/charge-actions.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/charge-actions.js should pass jscs', function () {\n    ok(true, 'mixins/charge-actions.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/charge-route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/charge-route.js should pass jscs', function () {\n    ok(true, 'mixins/charge-route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/date-format.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/date-format.js should pass jscs', function () {\n    ok(true, 'mixins/date-format.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/dob-days.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/dob-days.js should pass jscs', function () {\n    ok(true, 'mixins/dob-days.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/edit-panel-props.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/edit-panel-props.js should pass jscs', function () {\n    ok(true, 'mixins/edit-panel-props.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/fulfill-request.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/fulfill-request.js should pass jscs', function () {\n    ok(true, 'mixins/fulfill-request.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/hospitalrun-version.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/hospitalrun-version.js should pass jscs', function () {\n    ok(true, 'mixins/hospitalrun-version.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/imaging-pricing-types.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/imaging-pricing-types.js should pass jscs', function () {\n    ok(true, 'mixins/imaging-pricing-types.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/inventory-adjustment-types.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/inventory-adjustment-types.js should pass jscs', function () {\n    ok(true, 'mixins/inventory-adjustment-types.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/inventory-id.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/inventory-id.js should pass jscs', function () {\n    ok(true, 'mixins/inventory-id.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/inventory-locations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/inventory-locations.js should pass jscs', function () {\n    ok(true, 'mixins/inventory-locations.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/inventory-selection.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/inventory-selection.js should pass jscs', function () {\n    ok(true, 'mixins/inventory-selection.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/inventory-type-list.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/inventory-type-list.js should pass jscs', function () {\n    ok(true, 'mixins/inventory-type-list.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/is-update-disabled.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/is-update-disabled.js should pass jscs', function () {\n    ok(true, 'mixins/is-update-disabled.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/lab-pricing-types.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/lab-pricing-types.js should pass jscs', function () {\n    ok(true, 'mixins/lab-pricing-types.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/location-name.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/location-name.js should pass jscs', function () {\n    ok(true, 'mixins/location-name.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/medication-details.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/medication-details.js should pass jscs', function () {\n    ok(true, 'mixins/medication-details.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/modal-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/modal-helper.js should pass jscs', function () {\n    ok(true, 'mixins/modal-helper.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/navigation.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/navigation.js should pass jscs', function () {\n    ok(true, 'mixins/navigation.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/number-format.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/number-format.js should pass jscs', function () {\n    ok(true, 'mixins/number-format.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/pagination-props.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/pagination-props.js should pass jscs', function () {\n    ok(true, 'mixins/pagination-props.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/paging-actions.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/paging-actions.js should pass jscs', function () {\n    ok(true, 'mixins/paging-actions.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-diagnosis.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-diagnosis.js should pass jscs', function () {\n    ok(true, 'mixins/patient-diagnosis.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-id.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-id.js should pass jscs', function () {\n    ok(true, 'mixins/patient-id.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-list-route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-list-route.js should pass jscs', function () {\n    ok(true, 'mixins/patient-list-route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-name.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-name.js should pass jscs', function () {\n    ok(true, 'mixins/patient-name.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-notes.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-notes.js should pass jscs', function () {\n    ok(true, 'mixins/patient-notes.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-submodule.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-submodule.js should pass jscs', function () {\n    ok(true, 'mixins/patient-submodule.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/patient-visits.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/patient-visits.js should pass jscs', function () {\n    ok(true, 'mixins/patient-visits.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/payment-profiles.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/payment-profiles.js should pass jscs', function () {\n    ok(true, 'mixins/payment-profiles.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/pouch-adapter-utils.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/pouch-adapter-utils.js should pass jscs', function () {\n    ok(true, 'mixins/pouch-adapter-utils.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/pouchdb.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/pouchdb.js should pass jscs', function () {\n    ok(true, 'mixins/pouchdb.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/progress-dialog.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/progress-dialog.js should pass jscs', function () {\n    ok(true, 'mixins/progress-dialog.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/publish-statuses.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/publish-statuses.js should pass jscs', function () {\n    ok(true, 'mixins/publish-statuses.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/result-validation.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/result-validation.js should pass jscs', function () {\n    ok(true, 'mixins/result-validation.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/return-to.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/return-to.js should pass jscs', function () {\n    ok(true, 'mixins/return-to.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/setup-user-role.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/setup-user-role.js should pass jscs', function () {\n    ok(true, 'mixins/setup-user-role.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/unit-types.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/unit-types.js should pass jscs', function () {\n    ok(true, 'mixins/unit-types.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/user-roles.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/user-roles.js should pass jscs', function () {\n    ok(true, 'mixins/user-roles.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/user-session.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/user-session.js should pass jscs', function () {\n    ok(true, 'mixins/user-session.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/mixins/visit-types.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/visit-types.js should pass jscs', function () {\n    ok(true, 'mixins/visit-types.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/abstract.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/abstract.js should pass jscs', function () {\n    ok(true, 'models/abstract.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/add-diagnosis.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/add-diagnosis.js should pass jscs', function () {\n    ok(true, 'models/add-diagnosis.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/appointment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/appointment.js should pass jscs', function () {\n    ok(true, 'models/appointment.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/billing-line-item.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/billing-line-item.js should pass jscs', function () {\n    ok(true, 'models/billing-line-item.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/family-info.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/family-info.js should pass jscs', function () {\n    ok(true, 'models/family-info.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/imaging.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/imaging.js should pass jscs', function () {\n    ok(true, 'models/imaging.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/inv-location.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/inv-location.js should pass jscs', function () {\n    ok(true, 'models/inv-location.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/inv-purchase.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/inv-purchase.js should pass jscs', function () {\n    ok(true, 'models/inv-purchase.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/inv-request.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/inv-request.js should pass jscs', function () {\n    ok(true, 'models/inv-request.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/inventory-batch.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/inventory-batch.js should pass jscs', function () {\n    ok(true, 'models/inventory-batch.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/inventory.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/inventory.js should pass jscs', function () {\n    ok(true, 'models/inventory.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/invoice.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/invoice.js should pass jscs', function () {\n    ok(true, 'models/invoice.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/lab.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/lab.js should pass jscs', function () {\n    ok(true, 'models/lab.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/line-item-detail.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/line-item-detail.js should pass jscs', function () {\n    ok(true, 'models/line-item-detail.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/lookup.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/lookup.js should pass jscs', function () {\n    ok(true, 'models/lookup.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/medication.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/medication.js should pass jscs', function () {\n    ok(true, 'models/medication.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/option.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/option.js should pass jscs', function () {\n    ok(true, 'models/option.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/override-price.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/override-price.js should pass jscs', function () {\n    ok(true, 'models/override-price.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/patient-note.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/patient-note.js should pass jscs', function () {\n    ok(true, 'models/patient-note.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/patient.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/patient.js should pass jscs', function () {\n    ok(true, 'models/patient.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/payment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/payment.js should pass jscs', function () {\n    ok(true, 'models/payment.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/photo.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/photo.js should pass jscs', function () {\n    ok(true, 'models/photo.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/price-profile.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/price-profile.js should pass jscs', function () {\n    ok(true, 'models/price-profile.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/pricing.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/pricing.js should pass jscs', function () {\n    ok(true, 'models/pricing.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/proc-charge.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/proc-charge.js should pass jscs', function () {\n    ok(true, 'models/proc-charge.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/procedure.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/procedure.js should pass jscs', function () {\n    ok(true, 'models/procedure.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/sequence.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/sequence.js should pass jscs', function () {\n    ok(true, 'models/sequence.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/social-expense.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/social-expense.js should pass jscs', function () {\n    ok(true, 'models/social-expense.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/user-role.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/user-role.js should pass jscs', function () {\n    ok(true, 'models/user-role.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/user.js should pass jscs', function () {\n    ok(true, 'models/user.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/visit.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/visit.js should pass jscs', function () {\n    ok(true, 'models/visit.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/models/vital.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/vital.js should pass jscs', function () {\n    ok(true, 'models/vital.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/add-contact/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/add-contact');\n  test('patients/add-contact/controller.js should pass jscs', function () {\n    ok(true, 'patients/add-contact/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/admitted/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/admitted');\n  test('patients/admitted/controller.js should pass jscs', function () {\n    ok(true, 'patients/admitted/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/admitted/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/admitted');\n  test('patients/admitted/route.js should pass jscs', function () {\n    ok(true, 'patients/admitted/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/delete');\n  test('patients/delete/controller.js should pass jscs', function () {\n    ok(true, 'patients/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/edit');\n  test('patients/edit/controller.js should pass jscs', function () {\n    ok(true, 'patients/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/edit');\n  test('patients/edit/route.js should pass jscs', function () {\n    ok(true, 'patients/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/index');\n  test('patients/index/controller.js should pass jscs', function () {\n    ok(true, 'patients/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/index');\n  test('patients/index/route.js should pass jscs', function () {\n    ok(true, 'patients/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/notes/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/notes');\n  test('patients/notes/controller.js should pass jscs', function () {\n    ok(true, 'patients/notes/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/photo/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/photo');\n  test('patients/photo/controller.js should pass jscs', function () {\n    ok(true, 'patients/photo/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/quick-add/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/quick-add');\n  test('patients/quick-add/controller.js should pass jscs', function () {\n    ok(true, 'patients/quick-add/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/reports/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/reports');\n  test('patients/reports/controller.js should pass jscs', function () {\n    ok(true, 'patients/reports/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/reports/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/reports');\n  test('patients/reports/route.js should pass jscs', function () {\n    ok(true, 'patients/reports/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients');\n  test('patients/route.js should pass jscs', function () {\n    ok(true, 'patients/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/search/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/search');\n  test('patients/search/controller.js should pass jscs', function () {\n    ok(true, 'patients/search/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/search/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/search');\n  test('patients/search/route.js should pass jscs', function () {\n    ok(true, 'patients/search/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/socialwork/expense/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/socialwork/expense');\n  test('patients/socialwork/expense/controller.js should pass jscs', function () {\n    ok(true, 'patients/socialwork/expense/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/patients/socialwork/family-info/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - patients/socialwork/family-info');\n  test('patients/socialwork/family-info/controller.js should pass jscs', function () {\n    ok(true, 'patients/socialwork/family-info/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/delete');\n  test('pricing/delete/controller.js should pass jscs', function () {\n    ok(true, 'pricing/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/edit');\n  test('pricing/edit/controller.js should pass jscs', function () {\n    ok(true, 'pricing/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/edit');\n  test('pricing/edit/route.js should pass jscs', function () {\n    ok(true, 'pricing/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/imaging/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/imaging');\n  test('pricing/imaging/controller.js should pass jscs', function () {\n    ok(true, 'pricing/imaging/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/imaging/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/imaging');\n  test('pricing/imaging/route.js should pass jscs', function () {\n    ok(true, 'pricing/imaging/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/index');\n  test('pricing/index/controller.js should pass jscs', function () {\n    ok(true, 'pricing/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/index');\n  test('pricing/index/route.js should pass jscs', function () {\n    ok(true, 'pricing/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/lab/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/lab');\n  test('pricing/lab/controller.js should pass jscs', function () {\n    ok(true, 'pricing/lab/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/lab/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/lab');\n  test('pricing/lab/route.js should pass jscs', function () {\n    ok(true, 'pricing/lab/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/override/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/override');\n  test('pricing/override/controller.js should pass jscs', function () {\n    ok(true, 'pricing/override/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/procedure/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/procedure');\n  test('pricing/procedure/controller.js should pass jscs', function () {\n    ok(true, 'pricing/procedure/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/procedure/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/procedure');\n  test('pricing/procedure/route.js should pass jscs', function () {\n    ok(true, 'pricing/procedure/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/profiles/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/profiles');\n  test('pricing/profiles/controller.js should pass jscs', function () {\n    ok(true, 'pricing/profiles/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/profiles/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/profiles/edit');\n  test('pricing/profiles/edit/controller.js should pass jscs', function () {\n    ok(true, 'pricing/profiles/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/profiles/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/profiles');\n  test('pricing/profiles/route.js should pass jscs', function () {\n    ok(true, 'pricing/profiles/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing');\n  test('pricing/route.js should pass jscs', function () {\n    ok(true, 'pricing/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/search/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/search');\n  test('pricing/search/controller.js should pass jscs', function () {\n    ok(true, 'pricing/search/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/search/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/search');\n  test('pricing/search/route.js should pass jscs', function () {\n    ok(true, 'pricing/search/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/ward/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/ward');\n  test('pricing/ward/controller.js should pass jscs', function () {\n    ok(true, 'pricing/ward/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/pricing/ward/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - pricing/ward');\n  test('pricing/ward/route.js should pass jscs', function () {\n    ok(true, 'pricing/ward/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/print/invoice/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - print/invoice');\n  test('print/invoice/controller.js should pass jscs', function () {\n    ok(true, 'print/invoice/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/procedures/charge/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - procedures/charge');\n  test('procedures/charge/controller.js should pass jscs', function () {\n    ok(true, 'procedures/charge/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/procedures/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - procedures/edit');\n  test('procedures/edit/controller.js should pass jscs', function () {\n    ok(true, 'procedures/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/procedures/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - procedures/edit');\n  test('procedures/edit/route.js should pass jscs', function () {\n    ok(true, 'procedures/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/procedures/medication/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - procedures/medication');\n  test('procedures/medication/controller.js should pass jscs', function () {\n    ok(true, 'procedures/medication/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('resolver.js should pass jscs', function () {\n    ok(true, 'resolver.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('router.js should pass jscs', function () {\n    ok(true, 'router.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/abstract-edit-route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/abstract-edit-route.js should pass jscs', function () {\n    ok(true, 'routes/abstract-edit-route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/abstract-index-route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/abstract-index-route.js should pass jscs', function () {\n    ok(true, 'routes/abstract-index-route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/abstract-module-route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/abstract-module-route.js should pass jscs', function () {\n    ok(true, 'routes/abstract-module-route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/abstract-search-route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/abstract-search-route.js should pass jscs', function () {\n    ok(true, 'routes/abstract-search-route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/application.js should pass jscs', function () {\n    ok(true, 'routes/application.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/index.js should pass jscs', function () {\n    ok(true, 'routes/index.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/routes/login.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/login.js should pass jscs', function () {\n    ok(true, 'routes/login.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/serializers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/application.js should pass jscs', function () {\n    ok(true, 'serializers/application.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/serializers/user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/user.js should pass jscs', function () {\n    ok(true, 'serializers/user.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/services/config.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/config.js should pass jscs', function () {\n    ok(true, 'services/config.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/services/database.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/database.js should pass jscs', function () {\n    ok(true, 'services/database.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/services/filesystem.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/filesystem.js should pass jscs', function () {\n    ok(true, 'services/filesystem.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/serviceworkers/pouchdb-sync.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serviceworkers');\n  test('serviceworkers/pouchdb-sync.js should pass jscs', function () {\n    ok(true, 'serviceworkers/pouchdb-sync.js should pass jscs.');\n  });\n});","define(\"hospitalrun/tests/template-deprecations-test\", [\"exports\"], function (exports) {\n  \"use strict\";\n});","define('hospitalrun/tests/test-helper', ['exports', 'hospitalrun/tests/helpers/resolver', 'ember-qunit'], function (exports, _hospitalrunTestsHelpersResolver, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_hospitalrunTestsHelpersResolver['default']);\n});","define('hospitalrun/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('test-helper.js should pass jscs', function () {\n    ok(true, 'test-helper.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/unit/appointments/missed/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:appointments/missed', 'Unit | Route | appointments/missed', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('hospitalrun/tests/unit/appointments/missed/route-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/appointments/missed');\n  test('unit/appointments/missed/route-test.js should pass jscs', function () {\n    ok(true, 'unit/appointments/missed/route-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/unit/components/nav-menu-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('nav-menu', 'NavMenuComponent', {\n    unit: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    assert.expect(2);\n\n    var startingMenu = {\n      title: 'Inventory',\n      iconClass: 'octicon-package',\n      route: 'inventory',\n      capability: 'inventory',\n      subnav: [{\n        title: 'Requests',\n        iconClass: 'octicon-chevron-right',\n        route: 'inventory.index',\n        capability: 'add_inventory_request'\n      }, {\n        title: 'Items',\n        iconClass: 'octicon-chevron-right',\n        route: 'inventory.listing',\n        capability: 'inventory'\n      }]\n    };\n\n    // creates the component instance\n    var navMenuProperties = { nav: startingMenu };\n    var navMenu = this.subject(navMenuProperties);\n    assert.equal(navMenu._state, 'preRender');\n\n    // appends the navMenu to the page\n    this.render();\n    assert.equal(navMenu._state, 'inDOM');\n  });\n});","define('hospitalrun/tests/unit/components/nav-menu-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/components');\n  test('unit/components/nav-menu-test.js should pass jscs', function () {\n    ok(true, 'unit/components/nav-menu-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/unit/models/inventory-test', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('inventory', 'Unit | Model | inventory', {\n    // Specify the other units that are required for this test.\n    needs: ['ember-validations@validator:local/numericality', 'ember-validations@validator:local/presence', 'model:inv-location', 'model:inv-purchase', 'service:validations']\n  });\n\n  (0, _emberQunit.test)('condition', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model, 'Model exists');\n\n    _ember['default'].run(function () {\n      model.setProperties({\n        estimatedDaysOfStock: 28,\n        rank: 'A'\n      });\n    });\n    assert.equal(model.get('condition'), 'good', 'Condition Should be good with given values');\n\n    _ember['default'].run(function () {\n      model.set('estimatedDaysOfStock', 15);\n    });\n    assert.equal(model.get('condition'), 'average', 'Condition Should be average with new quantity');\n\n    _ember['default'].run(function () {\n      model.set('rank', 'B');\n    });\n    assert.equal(model.get('condition'), 'good', 'Condition should be good again with new rank');\n\n    _ember['default'].run(function () {\n      model.set('estimatedDaysOfStock', 6);\n    });\n    assert.equal(model.get('condition'), 'bad', 'Condition should be bad with new quantity');\n\n    _ember['default'].run(function () {\n      model.set('rank', 'C');\n    });\n    assert.equal(model.get('condition'), 'average', 'Condition should be average again');\n  });\n});","define('hospitalrun/tests/unit/models/inventory-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/inventory-test.js should pass jscs', function () {\n    ok(true, 'unit/models/inventory-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/unit/services/config-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:config', 'Unit | Service | config', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('hospitalrun/tests/unit/services/config-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/services');\n  test('unit/services/config-test.js should pass jscs', function () {\n    ok(true, 'unit/services/config-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/unit/services/filesystem-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:filesystem', 'Unit | Service | filesystem', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('hospitalrun/tests/unit/services/filesystem-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/services');\n  test('unit/services/filesystem-test.js should pass jscs', function () {\n    ok(true, 'unit/services/filesystem-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/unit/utils/item-condition-test', ['exports', 'hospitalrun/utils/item-condition', 'ember-qunit'], function (exports, _hospitalrunUtilsItemCondition, _emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('util:item-condition', 'Unit | Utils | item-condition');\n\n  (0, _emberQunit.test)('rankToMultiplier', function (assert) {\n    assert.equal((0, _hospitalrunUtilsItemCondition.rankToMultiplier)('A'), 0.5, 'Should be one half for A rank');\n    assert.equal((0, _hospitalrunUtilsItemCondition.rankToMultiplier)('B'), 1, 'Should be one for B rank');\n    assert.equal((0, _hospitalrunUtilsItemCondition.rankToMultiplier)('C'), 2, 'Should be two for C rank');\n  });\n\n  (0, _emberQunit.test)('getCondition', function (assert) {\n    assert.equal((0, _hospitalrunUtilsItemCondition.getCondition)(14), 'good', 'Should be good for 14 days');\n    assert.equal((0, _hospitalrunUtilsItemCondition.getCondition)(13), 'average', 'Should be average for 13 days');\n    assert.equal((0, _hospitalrunUtilsItemCondition.getCondition)(6), 'bad', 'Should be bad for 6 days');\n    assert.equal((0, _hospitalrunUtilsItemCondition.getCondition)(14, 0.5), 'average', 'Shold accept custom multiplier');\n  });\n});","define('hospitalrun/tests/unit/utils/item-condition-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/utils');\n  test('unit/utils/item-condition-test.js should pass jscs', function () {\n    ok(true, 'unit/utils/item-condition-test.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/users/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - users/delete');\n  test('users/delete/controller.js should pass jscs', function () {\n    ok(true, 'users/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/users/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - users/edit');\n  test('users/edit/controller.js should pass jscs', function () {\n    ok(true, 'users/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/users/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - users/edit');\n  test('users/edit/route.js should pass jscs', function () {\n    ok(true, 'users/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/users/index/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - users/index');\n  test('users/index/controller.js should pass jscs', function () {\n    ok(true, 'users/index/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/users/index/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - users/index');\n  test('users/index/route.js should pass jscs', function () {\n    ok(true, 'users/index/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/users/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - users');\n  test('users/route.js should pass jscs', function () {\n    ok(true, 'users/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/utils/date-sort.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - utils');\n  test('utils/date-sort.js should pass jscs', function () {\n    ok(true, 'utils/date-sort.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/utils/email-validation.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - utils');\n  test('utils/email-validation.js should pass jscs', function () {\n    ok(true, 'utils/email-validation.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/utils/item-condition.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - utils');\n  test('utils/item-condition.js should pass jscs', function () {\n    ok(true, 'utils/item-condition.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/utils/patient-validation.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - utils');\n  test('utils/patient-validation.js should pass jscs', function () {\n    ok(true, 'utils/patient-validation.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/utils/pouch-views.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - utils');\n  test('utils/pouch-views.js should pass jscs', function () {\n    ok(true, 'utils/pouch-views.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/utils/select-values.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - utils');\n  test('utils/select-values.js should pass jscs', function () {\n    ok(true, 'utils/select-values.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/add-diagnosis/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/add-diagnosis');\n  test('visits/add-diagnosis/controller.js should pass jscs', function () {\n    ok(true, 'visits/add-diagnosis/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/charge/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/charge');\n  test('visits/charge/controller.js should pass jscs', function () {\n    ok(true, 'visits/charge/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/delete');\n  test('visits/delete/controller.js should pass jscs', function () {\n    ok(true, 'visits/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/edit');\n  test('visits/edit/controller.js should pass jscs', function () {\n    ok(true, 'visits/edit/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/edit/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/edit');\n  test('visits/edit/route.js should pass jscs', function () {\n    ok(true, 'visits/edit/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/procedures/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/procedures/delete');\n  test('visits/procedures/delete/controller.js should pass jscs', function () {\n    ok(true, 'visits/procedures/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/route.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits');\n  test('visits/route.js should pass jscs', function () {\n    ok(true, 'visits/route.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/vitals/delete/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/vitals/delete');\n  test('visits/vitals/delete/controller.js should pass jscs', function () {\n    ok(true, 'visits/vitals/delete/controller.js should pass jscs.');\n  });\n});","define('hospitalrun/tests/visits/vitals/edit/controller.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - visits/vitals/edit');\n  test('visits/vitals/edit/controller.js should pass jscs', function () {\n    ok(true, 'visits/vitals/edit/controller.js should pass jscs.');\n  });\n});","/* jshint ignore:start */\n\nrequire('hospitalrun/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappingslznzHA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxnlKA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttpBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}